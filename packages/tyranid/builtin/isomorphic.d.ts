/**
 *
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 *
 * Generated by `tyranid-tdgen@0.6.13`: https://github.com/tyranid-org/tyranid-tdgen
 * 
 */
  

import 'tyranid/isomorphic';

declare module 'tyranid/isomorphic' {

  export namespace Tyr {


    
    /**
     * Base interface from which documents in collection
     * "continent" <ContinentCollection> are derived
     */
    export interface BaseContinent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      code?: string;
      name?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "country" <CountryCollection> are derived
     */
    export interface BaseCountry<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      aliases?: string;
      anyCode?: string;
      code?: string;
      continent?: number;
      continent$?: NumContainer & BaseContinent<ObjIdType, ObjContainer, NumContainer>;
      fips10_4?: string;
      iso3166_1_a3?: string;
      iso3166_1_num?: number;
      name?: string;
      notes?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "mediaType" <MediaTypeCollection> are derived
     */
    export interface BaseMediaType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      extensions?: string[];
      name?: string;
      notes?: string;
      /**
       * This is an obsolete media type and this values contains the new value to use.       */
      obsolete?: string;
      /**
       * This file is not safe to download as a link       */
      unsafe?: boolean;
    }
    
    /**
     * Base interface from which documents in collection
     * "province" <ProvinceCollection> are derived
     */
    export interface BaseProvince<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      aliases?: string;
      anyCode?: string;
      code?: string;
      country?: CountryId;
      country$?: ObjContainer & BaseCountry<ObjIdType, ObjContainer, NumContainer>;
      fips10_4?: string;
      name?: string;
      notes?: string;
      region?: number;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrComponentConfig" <TyrComponentConfigCollection> are derived
     */
    export interface BaseTyrComponentConfig<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      collectionId?: string;
      documentUid?: string;
      fields: {
        filter?: any;
        hidden?: boolean;
        name: string;
        
        /**
         * ascend, descend, or null         */sortDirection?: string;
        width?: number;
      }[];
      /**
       * Idenifier to distinguish between like type components used in different areas       */
      key?: string;
      /**
       * Component Name (table, kanban, etc)       */
      name: string;
      pageSize?: number;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrExchangeRate" <TyrExchangeRateCollection> are derived
     */
    export interface BaseTyrExchangeRate<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      rates?: any;
      updatedOn?: any;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrImport" <TyrImportCollection> are derived
     */
    export interface BaseTyrImport<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      collectionName?: string;
      defaults?: any;
      file?: any;
      on?: any;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrInstance" <TyrInstanceCollection> are derived
     */
    export interface BaseTyrInstance<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      lastAliveOn?: Date;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrLog" <TyrLogCollection> are derived
     */
    export interface BaseTyrLog<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      c?: string;
      du?: number;
      e?: TyrLogEventId;
      e$?: ObjContainer & BaseTyrLogEvent<ObjIdType, ObjContainer, NumContainer>;
      hn?: string;
      i?: string;
      i$?: ObjContainer & BaseTyrInstance<ObjIdType, ObjContainer, NumContainer>;
      l?: TyrLogLevelId;
      l$?: ObjContainer & BaseTyrLogLevel<ObjIdType, ObjContainer, NumContainer>;
      m?: string;
      on?: Date;
      q?: any;
      r?: {
        ip?: string;
        m?: string;
        p?: string;
        q?: any;
        sc?: number;
        sid?: string;
        ua?: ObjIdType;
        ua$?: ObjContainer & BaseTyrUserAgent<ObjIdType, ObjContainer, NumContainer>;
      };
      st?: string;
      upd?: any;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrLogEvent" <TyrLogEventCollection> are derived
     */
    export interface BaseTyrLogEvent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      label?: string;
      notes?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrLogLevel" <TyrLogLevelCollection> are derived
     */
    export interface BaseTyrLogLevel<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      code?: string;
      /**
       * The console.X() method to use when logging to the console.       */
      method?: string;
      name?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrMarkupType" <TyrMarkupTypeCollection> are derived
     */
    export interface BaseTyrMarkupType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      name?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrMigrationStatus" <TyrMigrationStatusCollection> are derived
     */
    export interface BaseTyrMigrationStatus<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      appliedOn?: Date;
      uuid?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrPage" <TyrPageCollection> are derived
     */
    export interface BaseTyrPage<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      content?: { type: Tyr.TyrMarkupTypeId, content: string };
      fragment?: boolean;
      path?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrSchema" <TyrSchemaCollection> are derived
     */
    export interface BaseTyrSchema<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      collection?: string;
      def?: any;
      match?: any;
      src?: string;
      type?: TyrSchemaTypeId;
      type$?: ObjContainer & BaseTyrSchemaType<ObjIdType, ObjContainer, NumContainer>;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrSchemaType" <TyrSchemaTypeCollection> are derived
     */
    export interface BaseTyrSchemaType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      name?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrSubscription" <TyrSubscriptionCollection> are derived
     */
    export interface BaseTyrSubscription<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      c?: string;
      i?: string;
      on?: Date;
      /**
       * Stringified MongoDB query.       */
      q?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "tyrUserAgent" <TyrUserAgentCollection> are derived
     */
    export interface BaseTyrUserAgent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      ua?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "unit" <UnitCollection> are derived
     */
    export interface BaseUnit<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      abbreviation?: string;
      baseAdditive?: number;
      baseMultiplier?: number;
      factor?: string;
      formula?: string;
      name?: string;
      note?: string;
      /**
       * a unique id like _id, used when integers cannot be used       */
      sid?: string;
      system?: UnitSystemId;
      system$?: ObjContainer & BaseUnitSystem<ObjIdType, ObjContainer, NumContainer>;
      type?: UnitTypeId;
      type$?: ObjContainer & BaseUnitType<ObjIdType, ObjContainer, NumContainer>;
    }
    
    /**
     * Base interface from which documents in collection
     * "unitFactor" <UnitFactorCollection> are derived
     */
    export interface BaseUnitFactor<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      factor?: number;
      prefix?: string;
      symbol?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "unitSystem" <UnitSystemCollection> are derived
     */
    export interface BaseUnitSystem<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      name?: string;
      url?: string;
    }
    
    /**
     * Base interface from which documents in collection
     * "unitType" <UnitTypeCollection> are derived
     */
    export interface BaseUnitType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
      abbreviation?: string;
      formula?: string;
      name?: string;
      normal?: string;
      note?: string;
    }
    
    
    /**
     * Document returned by collection "continent" <ContinentCollection>
     */
    export interface Continent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<number>,
              BaseContinent<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "country" <CountryCollection>
     */
    export interface Country<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<CountryId>,
              BaseCountry<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "mediaType" <MediaTypeCollection>
     */
    export interface MediaType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<MediaTypeId>,
              BaseMediaType<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "province" <ProvinceCollection>
     */
    export interface Province<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<number>,
              BaseProvince<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrComponentConfig" <TyrComponentConfigCollection>
     */
    export interface TyrComponentConfig<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrComponentConfig<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrExchangeRate" <TyrExchangeRateCollection>
     */
    export interface TyrExchangeRate<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<string>,
              BaseTyrExchangeRate<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrImport" <TyrImportCollection>
     */
    export interface TyrImport<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrImport<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrInstance" <TyrInstanceCollection>
     */
    export interface TyrInstance<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<string>,
              BaseTyrInstance<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrLog" <TyrLogCollection>
     */
    export interface TyrLog<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrLog<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrLogEvent" <TyrLogEventCollection>
     */
    export interface TyrLogEvent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<TyrLogEventId>,
              BaseTyrLogEvent<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrLogLevel" <TyrLogLevelCollection>
     */
    export interface TyrLogLevel<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<TyrLogLevelId>,
              BaseTyrLogLevel<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrMarkupType" <TyrMarkupTypeCollection>
     */
    export interface TyrMarkupType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<TyrMarkupTypeId>,
              BaseTyrMarkupType<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrMigrationStatus" <TyrMigrationStatusCollection>
     */
    export interface TyrMigrationStatus<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<string>,
              BaseTyrMigrationStatus<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrPage" <TyrPageCollection>
     */
    export interface TyrPage<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrPage<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrSchema" <TyrSchemaCollection>
     */
    export interface TyrSchema<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrSchema<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrSchemaType" <TyrSchemaTypeCollection>
     */
    export interface TyrSchemaType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<TyrSchemaTypeId>,
              BaseTyrSchemaType<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrSubscription" <TyrSubscriptionCollection>
     */
    export interface TyrSubscription<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrSubscription<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "tyrUserAgent" <TyrUserAgentCollection>
     */
    export interface TyrUserAgent<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<ObjIdType>,
              BaseTyrUserAgent<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "unit" <UnitCollection>
     */
    export interface Unit<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<UnitId>,
              BaseUnit<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "unitFactor" <UnitFactorCollection>
     */
    export interface UnitFactor<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<UnitFactorId>,
              BaseUnitFactor<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "unitSystem" <UnitSystemCollection>
     */
    export interface UnitSystem<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<UnitSystemId>,
              BaseUnitSystem<ObjIdType, ObjContainer, NumContainer> {}
    /**
     * Document returned by collection "unitType" <UnitTypeCollection>
     */
    export interface UnitType<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends Inserted<UnitTypeId>,
              BaseUnitType<ObjIdType, ObjContainer, NumContainer> {}
    
    /**
     * Type definition for "continent" collection
     */
    export interface ContinentCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<Continent<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Service definition for "country" collection
     */
    export interface CountryCollectionService<ObjIdType = 'string'> {
      byCode(
        this: any,
        code: string): Promise<Country | undefined>;
      byFips(
        this: any,
        code: string): Promise<Country | undefined>; 
    }

    /**
     * Type definition for "country" collection
     */
    export interface CountryCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<Country<ObjIdType, ObjContainer, NumContainer>>,
              CountryCollectionEnumStatic {}
    
    /**
     * Type definition for "mediaType" collection
     */
    export interface MediaTypeCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<MediaType<ObjIdType, ObjContainer, NumContainer>>,
              MediaTypeCollectionEnumStatic {}
    
    /**
     * Type definition for "province" collection
     */
    export interface ProvinceCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<Province<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrComponentConfig" collection
     */
    export interface TyrComponentConfigCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrComponentConfig<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrExchangeRate" collection
     */
    export interface TyrExchangeRateCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrExchangeRate<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrImport" collection
     */
    export interface TyrImportCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrImport<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrInstance" collection
     */
    export interface TyrInstanceCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrInstance<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrLog" collection
     */
    export interface TyrLogCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrLog<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrLogEvent" collection
     */
    export interface TyrLogEventCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrLogEvent<ObjIdType, ObjContainer, NumContainer>>,
              TyrLogEventCollectionEnumStatic {}
    
    /**
     * Type definition for "tyrLogLevel" collection
     */
    export interface TyrLogLevelCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrLogLevel<ObjIdType, ObjContainer, NumContainer>>,
              TyrLogLevelCollectionEnumStatic {}
    
    /**
     * Type definition for "tyrMarkupType" collection
     */
    export interface TyrMarkupTypeCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrMarkupType<ObjIdType, ObjContainer, NumContainer>>,
              TyrMarkupTypeCollectionEnumStatic {}
    
    /**
     * Type definition for "tyrMigrationStatus" collection
     */
    export interface TyrMigrationStatusCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrMigrationStatus<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrPage" collection
     */
    export interface TyrPageCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrPage<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrSchema" collection
     */
    export interface TyrSchemaCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrSchema<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrSchemaType" collection
     */
    export interface TyrSchemaTypeCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrSchemaType<ObjIdType, ObjContainer, NumContainer>>,
              TyrSchemaTypeCollectionEnumStatic {}
    
    /**
     * Type definition for "tyrSubscription" collection
     */
    export interface TyrSubscriptionCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrSubscription<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "tyrUserAgent" collection
     */
    export interface TyrUserAgentCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<TyrUserAgent<ObjIdType, ObjContainer, NumContainer>> {}
    
    /**
     * Type definition for "unit" collection
     */
    export interface UnitCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<Unit<ObjIdType, ObjContainer, NumContainer>>,
              UnitCollectionEnumStatic {}
    
    /**
     * Type definition for "unitFactor" collection
     */
    export interface UnitFactorCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<UnitFactor<ObjIdType, ObjContainer, NumContainer>>,
              UnitFactorCollectionEnumStatic {}
    
    /**
     * Type definition for "unitSystem" collection
     */
    export interface UnitSystemCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<UnitSystem<ObjIdType, ObjContainer, NumContainer>>,
              UnitSystemCollectionEnumStatic {}
    
    /**
     * Type definition for "unitType" collection
     */
    export interface UnitTypeCollection<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>>
      extends CollectionInstance<UnitType<ObjIdType, ObjContainer, NumContainer>>,
              UnitTypeCollectionEnumStatic {}
    
    
  /**
   * Static properties for enum collection "CountryCollection"
   */
  export interface CountryCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      AFGHANISTAN: {
        _id: 4079;
        name: 'Afghanistan';
        code: 'AF';
        iso3166_1_a3: 'AFG';
        fips10_4: 'AF';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ALAND_ISLANDS: {
        _id: 4093;
        name: 'Aland Islands';
        code: 'AX';
        iso3166_1_a3: 'ALA';
        fips10_4: 'null';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ALBANIA: {
        _id: 4082;
        name: 'Albania';
        code: 'AL';
        iso3166_1_a3: 'ALB';
        fips10_4: 'AL';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ALGERIA: {
        _id: 4137;
        name: 'Algeria';
        code: 'DZ';
        iso3166_1_a3: 'DZA';
        fips10_4: 'AG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      AMERICAN_SAMOA: {
        _id: 4089;
        name: 'American Samoa';
        code: 'AS';
        iso3166_1_a3: 'ASM';
        fips10_4: 'AQ';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ANDORRA: {
        _id: 4077;
        name: 'Andorra';
        code: 'AD';
        iso3166_1_a3: 'AND';
        fips10_4: 'AN';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ANGOLA: {
        _id: 4085;
        name: 'Angola';
        code: 'AO';
        iso3166_1_a3: 'AGO';
        fips10_4: 'AO';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ANGUILLA: {
        _id: 4081;
        name: 'Anguilla';
        code: 'AI';
        iso3166_1_a3: 'AIA';
        fips10_4: 'AV';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ANONYMOUS_PROXY: {
        _id: 4075;
        name: 'Anonymous Proxy';
        code: 'A1';
        iso3166_1_a3: '';
        fips10_4: 'null';
        continent: 0;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ANTIGUA_AND_BARBUDA: {
        _id: 4080;
        name: 'Antigua and Barbuda';
        code: 'AG';
        iso3166_1_a3: 'ATG';
        fips10_4: 'AC';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ARGENTINA: {
        _id: 4088;
        name: 'Argentina';
        code: 'AR';
        iso3166_1_a3: 'ARG';
        fips10_4: 'AR';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ARMENIA: {
        _id: 4083;
        name: 'Armenia';
        code: 'AM';
        iso3166_1_a3: 'ARM';
        fips10_4: 'AM';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ARUBA: {
        _id: 4092;
        name: 'Aruba';
        code: 'AW';
        iso3166_1_a3: 'ABW';
        fips10_4: 'AA';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      AUSTRALIA: {
        _id: 4091;
        name: 'Australia';
        code: 'AU';
        iso3166_1_a3: 'AUS';
        fips10_4: 'AS';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      AUSTRIA: {
        _id: 4090;
        name: 'Austria';
        code: 'AT';
        iso3166_1_a3: 'AUT';
        fips10_4: 'AU';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      AZERBAIJAN: {
        _id: 4094;
        name: 'Azerbaijan';
        code: 'AZ';
        iso3166_1_a3: 'AZE';
        fips10_4: 'AJ';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BAHAMAS: {
        _id: 4108;
        name: 'Bahamas';
        code: 'BS';
        iso3166_1_a3: 'BHS';
        fips10_4: 'BF';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BAHRAIN: {
        _id: 4101;
        name: 'Bahrain';
        code: 'BH';
        iso3166_1_a3: 'BHR';
        fips10_4: 'BA';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BANGLADESH: {
        _id: 4097;
        name: 'Bangladesh';
        code: 'BD';
        iso3166_1_a3: 'BGD';
        fips10_4: 'BG';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BARBADOS: {
        _id: 4096;
        name: 'Barbados';
        code: 'BB';
        iso3166_1_a3: 'BRB';
        fips10_4: 'BB';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BELARUS: {
        _id: 4112;
        name: 'Belarus';
        code: 'BY';
        iso3166_1_a3: 'BLR';
        fips10_4: 'BO';
        continent: 4331;
        aliases: 'Byelarus';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BELGIUM: {
        _id: 4098;
        name: 'Belgium';
        code: 'BE';
        iso3166_1_a3: 'BEL';
        fips10_4: 'BE';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BELIZE: {
        _id: 4113;
        name: 'Belize';
        code: 'BZ';
        iso3166_1_a3: 'BLZ';
        fips10_4: 'BH';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BENIN: {
        _id: 4103;
        name: 'Benin';
        code: 'BJ';
        iso3166_1_a3: 'BEN';
        fips10_4: 'BN';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BERMUDA: {
        _id: 4104;
        name: 'Bermuda';
        code: 'BM';
        iso3166_1_a3: 'BMU';
        fips10_4: 'BD';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BHUTAN: {
        _id: 4109;
        name: 'Bhutan';
        code: 'BT';
        iso3166_1_a3: 'BTN';
        fips10_4: 'BT';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BOLIVIA: {
        _id: 4106;
        name: 'Bolivia';
        code: 'BO';
        iso3166_1_a3: 'BOL';
        fips10_4: 'BL';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BOSNIA_AND_HERZEGOVINA: {
        _id: 4095;
        name: 'Bosnia and Herzegovina';
        code: 'BA';
        iso3166_1_a3: 'BIH';
        fips10_4: 'BK';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BOTSWANA: {
        _id: 4111;
        name: 'Botswana';
        code: 'BW';
        iso3166_1_a3: 'BWA';
        fips10_4: 'BC';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BOUVET_ISLAND: {
        _id: 4110;
        name: 'Bouvet Island';
        code: 'BV';
        iso3166_1_a3: 'BVT';
        fips10_4: 'BV';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BRAZIL: {
        _id: 4107;
        name: 'Brazil';
        code: 'BR';
        iso3166_1_a3: 'BRA';
        fips10_4: 'BR';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BRITISH_INDIAN_OCEAN_TERRITORY: {
        _id: 4182;
        name: 'British Indian Ocean Territory';
        code: 'IO';
        iso3166_1_a3: 'IOT';
        fips10_4: 'IO';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BRUNEI_DARUSSALAM: {
        _id: 4105;
        name: 'Brunei Darussalam';
        code: 'BN';
        iso3166_1_a3: 'BRN';
        fips10_4: 'BX';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BULGARIA: {
        _id: 4100;
        name: 'Bulgaria';
        code: 'BG';
        iso3166_1_a3: 'BGR';
        fips10_4: 'BU';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BURKINA_FASO: {
        _id: 4099;
        name: 'Burkina Faso';
        code: 'BF';
        iso3166_1_a3: 'BFA';
        fips10_4: 'UV';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      BURUNDI: {
        _id: 4102;
        name: 'Burundi';
        code: 'BI';
        iso3166_1_a3: 'BDI';
        fips10_4: 'BY';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CAMBODIA: {
        _id: 4193;
        name: 'Cambodia';
        code: 'KH';
        iso3166_1_a3: 'KHM';
        fips10_4: 'CB';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CAMEROON: {
        _id: 4123;
        name: 'Cameroon';
        code: 'CM';
        iso3166_1_a3: 'CMR';
        fips10_4: 'CM';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CANADA: {
        _id: 4114;
        name: 'Canada';
        code: 'CA';
        iso3166_1_a3: 'CAN';
        fips10_4: 'CA';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CAPE_VERDE: {
        _id: 4128;
        name: 'Cape Verde';
        code: 'CV';
        iso3166_1_a3: 'CPV';
        fips10_4: 'CV';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CAYMAN_ISLANDS: {
        _id: 4200;
        name: 'Cayman Islands';
        code: 'KY';
        iso3166_1_a3: 'CYM';
        fips10_4: 'CJ';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CENTRAL_AFRICAN_REPUBLIC: {
        _id: 4117;
        name: 'Central African Republic';
        code: 'CF';
        iso3166_1_a3: 'CAF';
        fips10_4: 'CT';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CHAD: {
        _id: 4288;
        name: 'Chad';
        code: 'TD';
        iso3166_1_a3: 'TCD';
        fips10_4: 'CD';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CHILE: {
        _id: 4122;
        name: 'Chile';
        code: 'CL';
        iso3166_1_a3: 'CHL';
        fips10_4: 'CI';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CHINA: {
        _id: 4124;
        name: 'China';
        code: 'CN';
        iso3166_1_a3: 'CHN';
        fips10_4: 'CH';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CHRISTMAS_ISLAND: {
        _id: 4129;
        name: 'Christmas Island';
        code: 'CX';
        iso3166_1_a3: 'CXR';
        fips10_4: 'KT';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COCOS_KEELING_ISLANDS: {
        _id: 4115;
        name: 'Cocos (Keeling) Islands';
        code: 'CC';
        iso3166_1_a3: 'CCK';
        fips10_4: 'CK';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COLOMBIA: {
        _id: 4125;
        name: 'Colombia';
        code: 'CO';
        iso3166_1_a3: 'COL';
        fips10_4: 'CO';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COMOROS: {
        _id: 4195;
        name: 'Comoros';
        code: 'KM';
        iso3166_1_a3: 'COM';
        fips10_4: 'CN';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CONGO: {
        _id: 4118;
        name: 'Congo';
        code: 'CG';
        iso3166_1_a3: 'COG';
        fips10_4: 'CF';
        continent: 4328;
        aliases: 'Republic of the Congo';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CONGO_ZAIRE: {
        _id: 4326;
        name: 'Congo (Zaire)';
        code: 'ZR';
        iso3166_1_a3: '';
        fips10_4: 'CG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CONGO_DEMOCRATIC_REPUBLIC_OF_THE: {
        _id: 4116;
        name: 'Congo, Democratic Republic of the';
        code: 'CD';
        iso3166_1_a3: 'COD';
        fips10_4: 'CG';
        continent: 4328;
        aliases: 'Zaire, Democratic Republic of Congo';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COOK_ISLANDS: {
        _id: 4121;
        name: 'Cook Islands';
        code: 'CK';
        iso3166_1_a3: 'COK';
        fips10_4: 'CW';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COSTA_RICA: {
        _id: 4126;
        name: 'Costa Rica';
        code: 'CR';
        iso3166_1_a3: 'CRI';
        fips10_4: 'CS';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      COTE_D_IVOIRE: {
        _id: 4120;
        name: 'Cote dIvoire';
        code: 'CI';
        iso3166_1_a3: 'CIV';
        fips10_4: 'IV';
        continent: 4328;
        aliases: 'Ivory Coast, Cote dIvoire';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CROATIA: {
        _id: 4174;
        name: 'Croatia';
        code: 'HR';
        iso3166_1_a3: 'HRV';
        fips10_4: 'HR';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CUBA: {
        _id: 4127;
        name: 'Cuba';
        code: 'CU';
        iso3166_1_a3: 'CUB';
        fips10_4: 'CU';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CYPRUS: {
        _id: 4130;
        name: 'Cyprus';
        code: 'CY';
        iso3166_1_a3: 'CYP';
        fips10_4: 'CY';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      CZECH_REPUBLIC: {
        _id: 4131;
        name: 'Czech Republic';
        code: 'CZ';
        iso3166_1_a3: 'CZE';
        fips10_4: 'EZ';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      DENMARK: {
        _id: 4134;
        name: 'Denmark';
        code: 'DK';
        iso3166_1_a3: 'DNK';
        fips10_4: 'DA';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      DJIBOUTI: {
        _id: 4133;
        name: 'Djibouti';
        code: 'DJ';
        iso3166_1_a3: 'DJI';
        fips10_4: 'DJ';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      DOMINICA: {
        _id: 4135;
        name: 'Dominica';
        code: 'DM';
        iso3166_1_a3: 'DMA';
        fips10_4: 'DO';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      DOMINICAN_REPUBLIC: {
        _id: 4136;
        name: 'Dominican Republic';
        code: 'DO';
        iso3166_1_a3: 'DOM';
        fips10_4: 'DR';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ECUADOR: {
        _id: 4138;
        name: 'Ecuador';
        code: 'EC';
        iso3166_1_a3: 'ECU';
        fips10_4: 'EC';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      EGYPT: {
        _id: 4140;
        name: 'Egypt';
        code: 'EG';
        iso3166_1_a3: 'EGY';
        fips10_4: 'EG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      EL_SALVADOR: {
        _id: 4284;
        name: 'El Salvador';
        code: 'SV';
        iso3166_1_a3: 'SLV';
        fips10_4: 'ES';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      EQUATORIAL_GUINEA: {
        _id: 4164;
        name: 'Equatorial Guinea';
        code: 'GQ';
        iso3166_1_a3: 'GNQ';
        fips10_4: 'EK';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ERITREA: {
        _id: 4142;
        name: 'Eritrea';
        code: 'ER';
        iso3166_1_a3: 'ERI';
        fips10_4: 'ER';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ESTONIA: {
        _id: 4139;
        name: 'Estonia';
        code: 'EE';
        iso3166_1_a3: 'EST';
        fips10_4: 'EN';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ETHIOPIA: {
        _id: 4144;
        name: 'Ethiopia';
        code: 'ET';
        iso3166_1_a3: 'ETH';
        fips10_4: 'ET';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FALKLAND_ISLANDS_MALVINAS: {
        _id: 4148;
        name: 'Falkland Islands (Malvinas)';
        code: 'FK';
        iso3166_1_a3: 'FLK';
        fips10_4: 'FK';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FAROE_ISLANDS: {
        _id: 4150;
        name: 'Faroe Islands';
        code: 'FO';
        iso3166_1_a3: 'FRO';
        fips10_4: 'FO';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FIJI: {
        _id: 4147;
        name: 'Fiji';
        code: 'FJ';
        iso3166_1_a3: 'FJI';
        fips10_4: 'FJ';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FINLAND: {
        _id: 4146;
        name: 'Finland';
        code: 'FI';
        iso3166_1_a3: 'FIN';
        fips10_4: 'FI';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FRANCE: {
        _id: 4151;
        name: 'France';
        code: 'FR';
        iso3166_1_a3: 'FRA';
        fips10_4: 'FR';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FRENCH_GUIANA: {
        _id: 4156;
        name: 'French Guiana';
        code: 'GF';
        iso3166_1_a3: 'GUF';
        fips10_4: 'FG';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FRENCH_POLYNESIA: {
        _id: 4250;
        name: 'French Polynesia';
        code: 'PF';
        iso3166_1_a3: 'PYF';
        fips10_4: 'FP';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      FRENCH_SOUTHERN_TERRITORIES: {
        _id: 4289;
        name: 'French Southern Territories';
        code: 'TF';
        iso3166_1_a3: 'ATF';
        fips10_4: 'FS';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GABON: {
        _id: 4152;
        name: 'Gabon';
        code: 'GA';
        iso3166_1_a3: 'GAB';
        fips10_4: 'GB';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GAMBIA: {
        _id: 4161;
        name: 'Gambia';
        code: 'GM';
        iso3166_1_a3: 'GMB';
        fips10_4: 'GA';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GEORGIA: {
        _id: 4155;
        name: 'Georgia';
        code: 'GE';
        iso3166_1_a3: 'GEO';
        fips10_4: 'GG';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GERMANY: {
        _id: 4132;
        name: 'Germany';
        code: 'DE';
        iso3166_1_a3: 'DEU';
        fips10_4: 'GM';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GHANA: {
        _id: 4158;
        name: 'Ghana';
        code: 'GH';
        iso3166_1_a3: 'GHA';
        fips10_4: 'GH';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GIBRALTAR: {
        _id: 4159;
        name: 'Gibraltar';
        code: 'GI';
        iso3166_1_a3: 'GIB';
        fips10_4: 'GI';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GREECE: {
        _id: 4165;
        name: 'Greece';
        code: 'GR';
        iso3166_1_a3: 'GRC';
        fips10_4: 'GR';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GREENLAND: {
        _id: 4160;
        name: 'Greenland';
        code: 'GL';
        iso3166_1_a3: 'GRL';
        fips10_4: 'GL';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GRENADA: {
        _id: 4154;
        name: 'Grenada';
        code: 'GD';
        iso3166_1_a3: 'GRD';
        fips10_4: 'GJ';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUADELOUPE: {
        _id: 4163;
        name: 'Guadeloupe';
        code: 'GP';
        iso3166_1_a3: 'GLP';
        fips10_4: 'GP';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUAM: {
        _id: 4168;
        name: 'Guam';
        code: 'GU';
        iso3166_1_a3: 'GUM';
        fips10_4: 'GQ';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUATEMALA: {
        _id: 4167;
        name: 'Guatemala';
        code: 'GT';
        iso3166_1_a3: 'GTM';
        fips10_4: 'GT';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUERNSEY: {
        _id: 4157;
        name: 'Guernsey';
        code: 'GG';
        iso3166_1_a3: 'GGY';
        fips10_4: 'GK';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUINEA: {
        _id: 4162;
        name: 'Guinea';
        code: 'GN';
        iso3166_1_a3: 'GIN';
        fips10_4: 'GV';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUINEA_BISSAU: {
        _id: 4169;
        name: 'Guinea-Bissau';
        code: 'GW';
        iso3166_1_a3: 'GNB';
        fips10_4: 'PU';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      GUYANA: {
        _id: 4170;
        name: 'Guyana';
        code: 'GY';
        iso3166_1_a3: 'GUY';
        fips10_4: 'GY';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      HAITI: {
        _id: 4175;
        name: 'Haiti';
        code: 'HT';
        iso3166_1_a3: 'HTI';
        fips10_4: 'HA';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      HEARD_ISLAND_AND_MC_DONALD_ISLANDS: {
        _id: 4172;
        name: 'Heard Island and McDonald Islands';
        code: 'HM';
        iso3166_1_a3: 'HMD';
        fips10_4: 'HM';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      HOLY_SEE_VATICAN_CITY_STATE: {
        _id: 4309;
        name: 'Holy See (Vatican City State)';
        code: 'VA';
        iso3166_1_a3: 'VAT';
        fips10_4: 'VT';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      HONDURAS: {
        _id: 4173;
        name: 'Honduras';
        code: 'HN';
        iso3166_1_a3: 'HND';
        fips10_4: 'HO';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      HUNGARY: {
        _id: 4176;
        name: 'Hungary';
        code: 'HU';
        iso3166_1_a3: 'HUN';
        fips10_4: 'HU';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ICELAND: {
        _id: 4185;
        name: 'Iceland';
        code: 'IS';
        iso3166_1_a3: 'ISL';
        fips10_4: 'IC';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      INDIA: {
        _id: 4181;
        name: 'India';
        code: 'IN';
        iso3166_1_a3: 'IND';
        fips10_4: 'IN';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      INDONESIA: {
        _id: 4177;
        name: 'Indonesia';
        code: 'ID';
        iso3166_1_a3: 'IDN';
        fips10_4: 'ID';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      IRAN_ISLAMIC_REPUBLIC_OF: {
        _id: 4184;
        name: 'Iran, Islamic Republic of';
        code: 'IR';
        iso3166_1_a3: 'IRN';
        fips10_4: 'IR';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      IRAQ: {
        _id: 4183;
        name: 'Iraq';
        code: 'IQ';
        iso3166_1_a3: 'IRQ';
        fips10_4: 'IZ';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      IRELAND: {
        _id: 4178;
        name: 'Ireland';
        code: 'IE';
        iso3166_1_a3: 'IRL';
        fips10_4: 'EI';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ISLE_OF_MAN: {
        _id: 4180;
        name: 'Isle of Man';
        code: 'IM';
        iso3166_1_a3: 'IMN';
        fips10_4: 'IM';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ISRAEL: {
        _id: 4179;
        name: 'Israel';
        code: 'IL';
        iso3166_1_a3: 'ISR';
        fips10_4: 'IS';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ITALY: {
        _id: 4186;
        name: 'Italy';
        code: 'IT';
        iso3166_1_a3: 'ITA';
        fips10_4: 'IT';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      JAMAICA: {
        _id: 4188;
        name: 'Jamaica';
        code: 'JM';
        iso3166_1_a3: 'JAM';
        fips10_4: 'JM';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      JAPAN: {
        _id: 4190;
        name: 'Japan';
        code: 'JP';
        iso3166_1_a3: 'JPN';
        fips10_4: 'JA';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      JERSEY: {
        _id: 4187;
        name: 'Jersey';
        code: 'JE';
        iso3166_1_a3: 'JEY';
        fips10_4: 'JE';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      JORDAN: {
        _id: 4189;
        name: 'Jordan';
        code: 'JO';
        iso3166_1_a3: 'JOR';
        fips10_4: 'JO';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      KAZAKHSTAN: {
        _id: 4201;
        name: 'Kazakhstan';
        code: 'KZ';
        iso3166_1_a3: 'KAZ';
        fips10_4: 'KZ';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      KENYA: {
        _id: 4191;
        name: 'Kenya';
        code: 'KE';
        iso3166_1_a3: 'KEN';
        fips10_4: 'KE';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      KIRIBATI: {
        _id: 4194;
        name: 'Kiribati';
        code: 'KI';
        iso3166_1_a3: 'KIR';
        fips10_4: 'KR';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      KUWAIT: {
        _id: 4199;
        name: 'Kuwait';
        code: 'KW';
        iso3166_1_a3: 'KWT';
        fips10_4: 'KU';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      KYRGYZSTAN: {
        _id: 4192;
        name: 'Kyrgyzstan';
        code: 'KG';
        iso3166_1_a3: 'KGZ';
        fips10_4: 'KG';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LAO_PEOPLES_DEMOCRATIC_REPUBLIC: {
        _id: 4202;
        name: 'Lao Peoples Democratic Republic';
        code: 'LA';
        iso3166_1_a3: 'LAO';
        fips10_4: 'LA';
        continent: 4330;
        aliases: 'Laos';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LATVIA: {
        _id: 4211;
        name: 'Latvia';
        code: 'LV';
        iso3166_1_a3: 'LVA';
        fips10_4: 'LG';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LEBANON: {
        _id: 4203;
        name: 'Lebanon';
        code: 'LB';
        iso3166_1_a3: 'LBN';
        fips10_4: 'LE';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LESOTHO: {
        _id: 4208;
        name: 'Lesotho';
        code: 'LS';
        iso3166_1_a3: 'LSO';
        fips10_4: 'LT';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LIBERIA: {
        _id: 4207;
        name: 'Liberia';
        code: 'LR';
        iso3166_1_a3: 'LBR';
        fips10_4: 'LI';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LIBYAN_ARAB_JAMAHIRIYA: {
        _id: 4212;
        name: 'Libyan Arab Jamahiriya';
        code: 'LY';
        iso3166_1_a3: 'LBY';
        fips10_4: 'null';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LIECHTENSTEIN: {
        _id: 4205;
        name: 'Liechtenstein';
        code: 'LI';
        iso3166_1_a3: 'LIE';
        fips10_4: 'LS';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LITHUANIA: {
        _id: 4209;
        name: 'Lithuania';
        code: 'LT';
        iso3166_1_a3: 'LTU';
        fips10_4: 'LH';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      LUXEMBOURG: {
        _id: 4210;
        name: 'Luxembourg';
        code: 'LU';
        iso3166_1_a3: 'LUX';
        fips10_4: 'LU';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MACAO: {
        _id: 4223;
        name: 'Macao';
        code: 'MO';
        iso3166_1_a3: 'MAC';
        fips10_4: 'MC';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MACEDONIA: {
        _id: 4219;
        name: 'Macedonia';
        code: 'MK';
        iso3166_1_a3: 'MKD';
        fips10_4: 'MK';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MADAGASCAR: {
        _id: 4217;
        name: 'Madagascar';
        code: 'MG';
        iso3166_1_a3: 'MDG';
        fips10_4: 'MA';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MALAWI: {
        _id: 4231;
        name: 'Malawi';
        code: 'MW';
        iso3166_1_a3: 'MWI';
        fips10_4: 'MI';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MALAYSIA: {
        _id: 4233;
        name: 'Malaysia';
        code: 'MY';
        iso3166_1_a3: 'MYS';
        fips10_4: 'MY';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MALDIVES: {
        _id: 4230;
        name: 'Maldives';
        code: 'MV';
        iso3166_1_a3: 'MDV';
        fips10_4: 'MV';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MALI: {
        _id: 4220;
        name: 'Mali';
        code: 'ML';
        iso3166_1_a3: 'MLI';
        fips10_4: 'ML';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MALTA: {
        _id: 4228;
        name: 'Malta';
        code: 'MT';
        iso3166_1_a3: 'MLT';
        fips10_4: 'MT';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MARSHALL_ISLANDS: {
        _id: 4218;
        name: 'Marshall Islands';
        code: 'MH';
        iso3166_1_a3: 'MHL';
        fips10_4: 'RM';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MARTINIQUE: {
        _id: 4225;
        name: 'Martinique';
        code: 'MQ';
        iso3166_1_a3: 'MTQ';
        fips10_4: 'MB';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MAURITANIA: {
        _id: 4226;
        name: 'Mauritania';
        code: 'MR';
        iso3166_1_a3: 'MRT';
        fips10_4: 'MR';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MAURITIUS: {
        _id: 4229;
        name: 'Mauritius';
        code: 'MU';
        iso3166_1_a3: 'MUS';
        fips10_4: 'MP';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MAYOTTE: {
        _id: 4319;
        name: 'Mayotte';
        code: 'YT';
        iso3166_1_a3: 'MYT';
        fips10_4: 'MF';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      METROPOLITAN_FRANCE: {
        _id: 4323;
        name: 'Metropolitan France';
        code: 'FX';
        iso3166_1_a3: '';
        fips10_4: 'null';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MEXICO: {
        _id: 4232;
        name: 'Mexico';
        code: 'MX';
        iso3166_1_a3: 'MEX';
        fips10_4: 'MX';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MICRONESIA_FEDERATED_STATES_OF: {
        _id: 4149;
        name: 'Micronesia, Federated States of';
        code: 'FM';
        iso3166_1_a3: 'FSM';
        fips10_4: 'FM';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MOLDOVA_REPUBLIC_OF: {
        _id: 4215;
        name: 'Moldova, Republic of';
        code: 'MD';
        iso3166_1_a3: 'MDA';
        fips10_4: 'MD';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MONACO: {
        _id: 4214;
        name: 'Monaco';
        code: 'MC';
        iso3166_1_a3: 'MCO';
        fips10_4: 'MN';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MONGOLIA: {
        _id: 4222;
        name: 'Mongolia';
        code: 'MN';
        iso3166_1_a3: 'MNG';
        fips10_4: 'MG';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MONTENEGRO: {
        _id: 4216;
        name: 'Montenegro';
        code: 'ME';
        iso3166_1_a3: 'MNE';
        fips10_4: 'MW';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MONTSERRAT: {
        _id: 4227;
        name: 'Montserrat';
        code: 'MS';
        iso3166_1_a3: 'MSR';
        fips10_4: 'MH';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MOROCCO: {
        _id: 4213;
        name: 'Morocco';
        code: 'MA';
        iso3166_1_a3: 'MAR';
        fips10_4: 'MO';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MOZAMBIQUE: {
        _id: 4234;
        name: 'Mozambique';
        code: 'MZ';
        iso3166_1_a3: 'MOZ';
        fips10_4: 'MZ';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      MYANMAR: {
        _id: 4221;
        name: 'Myanmar';
        code: 'MM';
        iso3166_1_a3: 'MMR';
        fips10_4: 'BM';
        continent: 4330;
        aliases: 'Burma';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NAMIBIA: {
        _id: 4235;
        name: 'Namibia';
        code: 'NA';
        iso3166_1_a3: 'NAM';
        fips10_4: 'WA';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NAURU: {
        _id: 4244;
        name: 'Nauru';
        code: 'NR';
        iso3166_1_a3: 'NRU';
        fips10_4: 'NR';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NEPAL: {
        _id: 4243;
        name: 'Nepal';
        code: 'NP';
        iso3166_1_a3: 'NPL';
        fips10_4: 'NP';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NETHERLANDS: {
        _id: 4241;
        name: 'Netherlands';
        code: 'NL';
        iso3166_1_a3: 'NLD';
        fips10_4: 'NL';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NETHERLANDS_ANTILLES: {
        _id: 4084;
        name: 'Netherlands Antilles';
        code: 'AN';
        iso3166_1_a3: '';
        fips10_4: 'NT';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NEW_CALEDONIA: {
        _id: 4236;
        name: 'New Caledonia';
        code: 'NC';
        iso3166_1_a3: 'NCL';
        fips10_4: 'NC';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NEW_ZEALAND: {
        _id: 4246;
        name: 'New Zealand';
        code: 'NZ';
        iso3166_1_a3: 'NZL';
        fips10_4: 'NZ';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NICARAGUA: {
        _id: 4240;
        name: 'Nicaragua';
        code: 'NI';
        iso3166_1_a3: 'NIC';
        fips10_4: 'NU';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NIGER: {
        _id: 4237;
        name: 'Niger';
        code: 'NE';
        iso3166_1_a3: 'NER';
        fips10_4: 'NG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NIGERIA: {
        _id: 4239;
        name: 'Nigeria';
        code: 'NG';
        iso3166_1_a3: 'NGA';
        fips10_4: 'NI';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NIUE: {
        _id: 4245;
        name: 'Niue';
        code: 'NU';
        iso3166_1_a3: 'NIU';
        fips10_4: 'NE';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NORFOLK_ISLAND: {
        _id: 4238;
        name: 'Norfolk Island';
        code: 'NF';
        iso3166_1_a3: 'NFK';
        fips10_4: 'NF';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NORTH_KOREA: {
        _id: 4197;
        name: 'North Korea';
        code: 'KP';
        iso3166_1_a3: 'PRK';
        fips10_4: 'KN';
        continent: 4330;
        aliases: 'Democratic Peoples Republic of Korea';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NORTHERN_MARIANA_ISLANDS: {
        _id: 4224;
        name: 'Northern Mariana Islands';
        code: 'MP';
        iso3166_1_a3: 'MNP';
        fips10_4: 'CQ';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      NORWAY: {
        _id: 4242;
        name: 'Norway';
        code: 'NO';
        iso3166_1_a3: 'NOR';
        fips10_4: 'NO';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      OMAN: {
        _id: 4247;
        name: 'Oman';
        code: 'OM';
        iso3166_1_a3: 'OMN';
        fips10_4: 'MU';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PAKISTAN: {
        _id: 4253;
        name: 'Pakistan';
        code: 'PK';
        iso3166_1_a3: 'PAK';
        fips10_4: 'PK';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PALAU: {
        _id: 4260;
        name: 'Palau';
        code: 'PW';
        iso3166_1_a3: 'PLW';
        fips10_4: 'PS';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PALESTINIAN_TERRITORY: {
        _id: 4258;
        name: 'Palestinian Territory';
        code: 'PS';
        iso3166_1_a3: 'PSE';
        fips10_4: 'null';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PANAMA: {
        _id: 4248;
        name: 'Panama';
        code: 'PA';
        iso3166_1_a3: 'PAN';
        fips10_4: 'PM';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PAPUA_NEW_GUINEA: {
        _id: 4251;
        name: 'Papua New Guinea';
        code: 'PG';
        iso3166_1_a3: 'PNG';
        fips10_4: 'PP';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PARAGUAY: {
        _id: 4261;
        name: 'Paraguay';
        code: 'PY';
        iso3166_1_a3: 'PRY';
        fips10_4: 'PA';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PERU: {
        _id: 4249;
        name: 'Peru';
        code: 'PE';
        iso3166_1_a3: 'PER';
        fips10_4: 'PE';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PHILIPPINES: {
        _id: 4252;
        name: 'Philippines';
        code: 'PH';
        iso3166_1_a3: 'PHL';
        fips10_4: 'RP';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PITCAIRN: {
        _id: 4256;
        name: 'Pitcairn';
        code: 'PN';
        iso3166_1_a3: 'PCN';
        fips10_4: 'PC';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      POLAND: {
        _id: 4254;
        name: 'Poland';
        code: 'PL';
        iso3166_1_a3: 'POL';
        fips10_4: 'PL';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PORTUGAL: {
        _id: 4259;
        name: 'Portugal';
        code: 'PT';
        iso3166_1_a3: 'PRT';
        fips10_4: 'PO';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      PUERTO_RICO: {
        _id: 4257;
        name: 'Puerto Rico';
        code: 'PR';
        iso3166_1_a3: 'PRI';
        fips10_4: 'RQ';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      QATAR: {
        _id: 4262;
        name: 'Qatar';
        code: 'QA';
        iso3166_1_a3: 'QAT';
        fips10_4: 'QA';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      REUNION: {
        _id: 4263;
        name: 'Reunion';
        code: 'RE';
        iso3166_1_a3: 'REU';
        fips10_4: 'RE';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ROMANIA: {
        _id: 4264;
        name: 'Romania';
        code: 'RO';
        iso3166_1_a3: 'ROU';
        fips10_4: 'RO';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      RUSSIAN_FEDERATION: {
        _id: 4266;
        name: 'Russian Federation';
        code: 'RU';
        iso3166_1_a3: 'RUS';
        fips10_4: 'RS';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      RWANDA: {
        _id: 4267;
        name: 'Rwanda';
        code: 'RW';
        iso3166_1_a3: 'RWA';
        fips10_4: 'RW';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAINT_HELENA: {
        _id: 4274;
        name: 'Saint Helena';
        code: 'SH';
        iso3166_1_a3: 'SHN';
        fips10_4: 'SH';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAINT_KITTS_AND_NEVIS: {
        _id: 4196;
        name: 'Saint Kitts and Nevis';
        code: 'KN';
        iso3166_1_a3: 'KNA';
        fips10_4: 'SC';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAINT_LUCIA: {
        _id: 4204;
        name: 'Saint Lucia';
        code: 'LC';
        iso3166_1_a3: 'LCA';
        fips10_4: 'ST';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAINT_PIERRE_AND_MIQUELON: {
        _id: 4255;
        name: 'Saint Pierre and Miquelon';
        code: 'PM';
        iso3166_1_a3: 'SPM';
        fips10_4: 'SB';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAINT_VINCENT_AND_THE_GRENADINES: {
        _id: 4310;
        name: 'Saint Vincent and the Grenadines';
        code: 'VC';
        iso3166_1_a3: 'VCT';
        fips10_4: 'VC';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAMOA: {
        _id: 4317;
        name: 'Samoa';
        code: 'WS';
        iso3166_1_a3: 'WSM';
        fips10_4: 'WS';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAN_MARINO: {
        _id: 4279;
        name: 'San Marino';
        code: 'SM';
        iso3166_1_a3: 'SMR';
        fips10_4: 'SM';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAO_TOME_AND_PRINCIPE: {
        _id: 4283;
        name: 'Sao Tome and Principe';
        code: 'ST';
        iso3166_1_a3: 'STP';
        fips10_4: 'TP';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SATELLITE_PROVIDER: {
        _id: 4076;
        name: 'Satellite Provider';
        code: 'A2';
        iso3166_1_a3: '';
        fips10_4: 'null';
        continent: 0;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SAUDI_ARABIA: {
        _id: 4268;
        name: 'Saudi Arabia';
        code: 'SA';
        iso3166_1_a3: 'SAU';
        fips10_4: 'SA';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SENEGAL: {
        _id: 4280;
        name: 'Senegal';
        code: 'SN';
        iso3166_1_a3: 'SEN';
        fips10_4: 'SG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SERBIA: {
        _id: 4265;
        name: 'Serbia';
        code: 'RS';
        iso3166_1_a3: 'SRB';
        fips10_4: 'RI';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SEYCHELLES: {
        _id: 4270;
        name: 'Seychelles';
        code: 'SC';
        iso3166_1_a3: 'SYC';
        fips10_4: 'SE';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SIERRA_LEONE: {
        _id: 4278;
        name: 'Sierra Leone';
        code: 'SL';
        iso3166_1_a3: 'SLE';
        fips10_4: 'SL';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SINGAPORE: {
        _id: 4273;
        name: 'Singapore';
        code: 'SG';
        iso3166_1_a3: 'SGP';
        fips10_4: 'SN';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SLOVAKIA: {
        _id: 4277;
        name: 'Slovakia';
        code: 'SK';
        iso3166_1_a3: 'SVK';
        fips10_4: 'LO';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SLOVENIA: {
        _id: 4275;
        name: 'Slovenia';
        code: 'SI';
        iso3166_1_a3: 'SVN';
        fips10_4: 'SI';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SOLOMON_ISLANDS: {
        _id: 4269;
        name: 'Solomon Islands';
        code: 'SB';
        iso3166_1_a3: 'SLB';
        fips10_4: 'BP';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SOMALIA: {
        _id: 4281;
        name: 'Somalia';
        code: 'SO';
        iso3166_1_a3: 'SOM';
        fips10_4: 'SO';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SOUTH_AFRICA: {
        _id: 4320;
        name: 'South Africa';
        code: 'ZA';
        iso3166_1_a3: 'ZAF';
        fips10_4: 'SF';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS: {
        _id: 4166;
        name: 'South Georgia and the South Sandwich Islands';
        code: 'GS';
        iso3166_1_a3: 'SGS';
        fips10_4: 'SX';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SOUTH_KOREA: {
        _id: 4198;
        name: 'South Korea';
        code: 'KR';
        iso3166_1_a3: 'KOR';
        fips10_4: 'KS';
        continent: 4330;
        aliases: 'Republic of Korea';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SPAIN: {
        _id: 4143;
        name: 'Spain';
        code: 'ES';
        iso3166_1_a3: 'ESP';
        fips10_4: 'SP';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SRI_LANKA: {
        _id: 4206;
        name: 'Sri Lanka';
        code: 'LK';
        iso3166_1_a3: 'LKA';
        fips10_4: 'CE';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SUDAN: {
        _id: 4271;
        name: 'Sudan';
        code: 'SD';
        iso3166_1_a3: 'SDN';
        fips10_4: 'SU';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SURINAME: {
        _id: 4282;
        name: 'Suriname';
        code: 'SR';
        iso3166_1_a3: 'SUR';
        fips10_4: 'NS';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SVALBARD_AND_JAN_MAYEN: {
        _id: 4276;
        name: 'Svalbard and Jan Mayen';
        code: 'SJ';
        iso3166_1_a3: 'SJM';
        fips10_4: 'SV';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SWAZILAND: {
        _id: 4286;
        name: 'Swaziland';
        code: 'SZ';
        iso3166_1_a3: 'SWZ';
        fips10_4: 'WZ';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SWEDEN: {
        _id: 4272;
        name: 'Sweden';
        code: 'SE';
        iso3166_1_a3: 'SWE';
        fips10_4: 'SW';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SWITZERLAND: {
        _id: 4119;
        name: 'Switzerland';
        code: 'CH';
        iso3166_1_a3: 'CHE';
        fips10_4: 'SZ';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      SYRIA: {
        _id: 4285;
        name: 'Syria';
        code: 'SY';
        iso3166_1_a3: 'SYR';
        fips10_4: 'SY';
        continent: 4330;
        aliases: 'Syrian Arab Republic';
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TAIWAN: {
        _id: 4301;
        name: 'Taiwan';
        code: 'TW';
        iso3166_1_a3: 'TWN';
        fips10_4: 'TW';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TAJIKISTAN: {
        _id: 4292;
        name: 'Tajikistan';
        code: 'TJ';
        iso3166_1_a3: 'TJK';
        fips10_4: 'TI';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TANZANIA_UNITED_REPUBLIC_OF: {
        _id: 4302;
        name: 'Tanzania, United Republic of';
        code: 'TZ';
        iso3166_1_a3: 'TZA';
        fips10_4: 'TZ';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      THAILAND: {
        _id: 4291;
        name: 'Thailand';
        code: 'TH';
        iso3166_1_a3: 'THA';
        fips10_4: 'TH';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TIMOR_LESTE: {
        _id: 4294;
        name: 'Timor-Leste';
        code: 'TL';
        iso3166_1_a3: 'TLS';
        fips10_4: 'TT';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TIMOR_LESTE_EAST_TIMOR: {
        _id: 4324;
        name: 'Timor-Leste (East Timor)';
        code: 'TP';
        iso3166_1_a3: '';
        fips10_4: 'TT';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TOGO: {
        _id: 4290;
        name: 'Togo';
        code: 'TG';
        iso3166_1_a3: 'TGO';
        fips10_4: 'TO';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TOKELAU: {
        _id: 4293;
        name: 'Tokelau';
        code: 'TK';
        iso3166_1_a3: 'TKL';
        fips10_4: 'TL';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TONGA: {
        _id: 4297;
        name: 'Tonga';
        code: 'TO';
        iso3166_1_a3: 'TON';
        fips10_4: 'TN';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TRINIDAD_AND_TOBAGO: {
        _id: 4299;
        name: 'Trinidad and Tobago';
        code: 'TT';
        iso3166_1_a3: 'TTO';
        fips10_4: 'TD';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TUNISIA: {
        _id: 4296;
        name: 'Tunisia';
        code: 'TN';
        iso3166_1_a3: 'TUN';
        fips10_4: 'TS';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TURKEY: {
        _id: 4298;
        name: 'Turkey';
        code: 'TR';
        iso3166_1_a3: 'TUR';
        fips10_4: 'TU';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TURKMENISTAN: {
        _id: 4295;
        name: 'Turkmenistan';
        code: 'TM';
        iso3166_1_a3: 'TKM';
        fips10_4: 'TX';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TURKS_AND_CAICOS_ISLANDS: {
        _id: 4287;
        name: 'Turks and Caicos Islands';
        code: 'TC';
        iso3166_1_a3: 'TCA';
        fips10_4: 'TK';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      TUVALU: {
        _id: 4300;
        name: 'Tuvalu';
        code: 'TV';
        iso3166_1_a3: 'TUV';
        fips10_4: 'TV';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UGANDA: {
        _id: 4304;
        name: 'Uganda';
        code: 'UG';
        iso3166_1_a3: 'UGA';
        fips10_4: 'UG';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UKRAINE: {
        _id: 4303;
        name: 'Ukraine';
        code: 'UA';
        iso3166_1_a3: 'UKR';
        fips10_4: 'UP';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UNITED_ARAB_EMIRATES: {
        _id: 4078;
        name: 'United Arab Emirates';
        code: 'AE';
        iso3166_1_a3: 'ARE';
        fips10_4: 'AE';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UNITED_KINGDOM: {
        _id: 4153;
        name: 'United Kingdom';
        code: 'GB';
        iso3166_1_a3: 'GBR';
        fips10_4: 'UK';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UNITED_STATES: {
        _id: 4306;
        name: 'United States';
        code: 'US';
        iso3166_1_a3: 'USA';
        fips10_4: 'US';
        continent: 4332;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UNITED_STATES_MINOR_OUTLYING_ISLANDS: {
        _id: 4305;
        name: 'United States Minor Outlying Islands';
        code: 'UM';
        iso3166_1_a3: 'UMI';
        fips10_4: 'null';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UNKNOWN: {
        _id: 4327;
        name: 'Unknown';
        code: 'O1';
        iso3166_1_a3: '';
        fips10_4: 'null';
        continent: 0;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      URUGUAY: {
        _id: 4307;
        name: 'Uruguay';
        code: 'UY';
        iso3166_1_a3: 'URY';
        fips10_4: 'UY';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      UZBEKISTAN: {
        _id: 4308;
        name: 'Uzbekistan';
        code: 'UZ';
        iso3166_1_a3: 'UZB';
        fips10_4: 'UZ';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      VANUATU: {
        _id: 4315;
        name: 'Vanuatu';
        code: 'VU';
        iso3166_1_a3: 'VUT';
        fips10_4: 'NH';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      VENEZUELA: {
        _id: 4311;
        name: 'Venezuela';
        code: 'VE';
        iso3166_1_a3: 'VEN';
        fips10_4: 'VE';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      VIETNAM: {
        _id: 4314;
        name: 'Vietnam';
        code: 'VN';
        iso3166_1_a3: 'VNM';
        fips10_4: 'VM';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      VIRGIN_ISLANDS_BRITISH: {
        _id: 4312;
        name: 'Virgin Islands, British';
        code: 'VG';
        iso3166_1_a3: 'VGB';
        fips10_4: 'VI';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      VIRGIN_ISLANDS_U_S: {
        _id: 4313;
        name: 'Virgin Islands, U.S.';
        code: 'VI';
        iso3166_1_a3: 'VIR';
        fips10_4: 'VQ';
        continent: 4334;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      WALLIS_AND_FUTUNA: {
        _id: 4316;
        name: 'Wallis and Futuna';
        code: 'WF';
        iso3166_1_a3: 'WLF';
        fips10_4: 'WF';
        continent: 4333;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      WESTERN_SAHARA: {
        _id: 4141;
        name: 'Western Sahara';
        code: 'EH';
        iso3166_1_a3: 'ESH';
        fips10_4: 'WI';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      YEMEN: {
        _id: 4318;
        name: 'Yemen';
        code: 'YE';
        iso3166_1_a3: 'YEM';
        fips10_4: 'YM';
        continent: 4330;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      YUGOSLAVIA: {
        _id: 4325;
        name: 'Yugoslavia';
        code: 'YU';
        iso3166_1_a3: '';
        fips10_4: 'YU';
        continent: 4331;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ZAMBIA: {
        _id: 4321;
        name: 'Zambia';
        code: 'ZM';
        iso3166_1_a3: 'ZMB';
        fips10_4: 'ZA';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

      ZIMBABWE: {
        _id: 4322;
        name: 'Zimbabwe';
        code: 'ZW';
        iso3166_1_a3: 'ZWE';
        fips10_4: 'ZI';
        continent: 4328;
      } & Country<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "MediaTypeCollection"
   */
  export interface MediaTypeCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      AUDIO_3_GPP: {
        _id: 'audio/3gpp';
        extensions: any;
        name: '3GPP audio/video container; if it does not contain video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_3_GPP_2: {
        _id: 'video/3gpp2';
        extensions: any;
        name: '3GPP2 audio/video container; if it contains video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_3_GPP_2: {
        _id: 'audio/3gpp2';
        extensions: any;
        name: '3GPP2 audio/video container; if it does not contain video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_3_GPP: {
        _id: 'video/3gpp';
        extensions: any;
        name: '3GPP; if it contains video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_7_Z_COMPRESSED: {
        _id: 'application/x-7z-compressed';
        extensions: any;
        name: '7-zip archive';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_AAC: {
        _id: 'audio/aac';
        extensions: any;
        name: 'AAC audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_AVI: {
        _id: 'video/avi';
        extensions: any;
        name: 'AVI: Audio Video Interleave';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_MSVIDEO: {
        _id: 'video/msvideo';
        extensions: any;
        name: 'AVI: Audio Video Interleave';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_X_MSVIDEO: {
        _id: 'video/x-msvideo';
        extensions: any;
        name: 'AVI: Audio Video Interleave';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_ABIWORD: {
        _id: 'application/x-abiword';
        extensions: any;
        name: 'AbiWord document';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_PDF: {
        _id: 'application/pdf';
        extensions: any;
        name: 'Adobe Portable Document Format (PDF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_AMAZON_EBOOK: {
        _id: 'application/vnd.amazon.ebook';
        extensions: any;
        name: 'Amazon Kindle eBook format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_APPLE_INSTALLER_XML: {
        _id: 'application/vnd.apple.installer+xml';
        extensions: any;
        name: 'Apple Installer Package';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_QUICKTIME: {
        _id: 'video/quicktime';
        extensions: any;
        name: 'Apple QuickTime';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_IWORK_KEYNOTE_SFFKEY: {
        _id: 'application/x-iwork-keynote-sffkey';
        extensions: any;
        name: 'Apple iWork Keynote';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_IWORK_NUMBERS_SFFNUMBERS: {
        _id: 'application/x-iwork-numbers-sffnumbers';
        extensions: any;
        name: 'Apple iWork Numbers';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_IWORK_PAGES_SFFPAGES: {
        _id: 'application/x-iwork-pages-sffpages';
        extensions: any;
        name: 'Apple iWork Pages';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_FREEARC: {
        _id: 'application/x-freearc';
        extensions: any;
        name: 'Archive document (multiple files embedded)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_BZIP: {
        _id: 'application/x-bzip';
        extensions: any;
        name: 'BZip archive';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_BZIP_2: {
        _id: 'application/x-bzip2';
        extensions: any;
        name: 'BZip2 archive';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_SH: {
        _id: 'application/x-sh';
        extensions: any;
        name: 'Bourne shell script';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_CSH: {
        _id: 'application/x-csh';
        extensions: any;
        name: 'C-Shell script';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_CSS: {
        _id: 'text/css';
        extensions: any;
        name: 'Cascading Style Sheets (CSS)';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_CSV: {
        _id: 'text/csv';
        extensions: any;
        name: 'Comma-separated values (CSV)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_ECMASCRIPT: {
        _id: 'text/ecmascript';
        extensions: any;
        name: 'EcmaScript';
        obsolete: 'application/ecmascript';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_ECMASCRIPT: {
        _id: 'application/ecmascript';
        extensions: any;
        name: 'EcmaScript module';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_EPUB_ZIP: {
        _id: 'application/epub+zip';
        extensions: any;
        name: 'Electronic publication (EPUB)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_GIF: {
        _id: 'image/gif';
        extensions: any;
        name: 'Graphics Interchange Format (GIF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_HTML: {
        _id: 'text/html';
        extensions: any;
        name: 'HyperText Markup Language (HTML)';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_VND_MICROSOFT_ICON: {
        _id: 'image/vnd.microsoft.icon';
        extensions: any;
        name: 'Icon format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_X_ICON: {
        _id: 'image/x-icon';
        extensions: any;
        name: 'Icon format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_JPEG: {
        _id: 'image/jpeg';
        extensions: any;
        name: 'JPEG images';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_JSON: {
        _id: 'application/json';
        extensions: any;
        name: 'JSON format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_JAVA_ARCHIVE: {
        _id: 'application/java-archive';
        extensions: any;
        name: 'Java Archive (JAR)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_JAVASCRIPT: {
        _id: 'application/x-javascript';
        extensions: any;
        name: 'JavaScript';
        obsolete: 'application/javascript';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_JAVASCRIPT: {
        _id: 'text/javascript';
        extensions: any;
        name: 'JavaScript';
        obsolete: 'application/javascript';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_JAVASCRIPT: {
        _id: 'application/javascript';
        extensions: any;
        name: 'JavaScript, JavaScript module';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_MPEG: {
        _id: 'audio/mpeg';
        extensions: any;
        name: 'MP3 audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_MPEG_3: {
        _id: 'audio/mpeg3';
        extensions: any;
        name: 'MP3 audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_X_MPEG_3: {
        _id: 'audio/x-mpeg-3';
        extensions: any;
        name: 'MP3 audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_MP_4: {
        _id: 'video/mp4';
        extensions: any;
        name: 'MP4 Video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_MP_4: {
        _id: 'application/mp4';
        extensions: any;
        name: 'MPEG 4';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_MPEG: {
        _id: 'video/mpeg';
        extensions: any;
        name: 'MPEG Video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_X_MPEG: {
        _id: 'video/x-mpeg';
        extensions: any;
        name: 'MPEG Video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_FONTOBJECT: {
        _id: 'application/vnd.ms-fontobject';
        extensions: any;
        name: 'MS Embedded OpenType fonts';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_ACCESS: {
        _id: 'application/vnd.ms-access';
        extensions: any;
        name: 'Microsoft Access';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_EXCEL: {
        _id: 'application/excel';
        extensions: any;
        name: 'Microsoft Excel';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_EXCEL: {
        _id: 'application/vnd.ms-excel';
        extensions: any;
        name: 'Microsoft Excel';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_EXCEL: {
        _id: 'application/x-excel';
        extensions: any;
        name: 'Microsoft Excel';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_MSEXCEL: {
        _id: 'application/x-msexcel';
        extensions: any;
        name: 'Microsoft Excel';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_EXCEL_SHEET_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-excel.sheet.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Excel (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET: {
        _id: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
        extensions: any;
        name: 'Microsoft Excel (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_EXCEL_ADDIN_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-excel.addin.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Excel Addin (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-excel.sheet.binary.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Excel Binary (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_EXCEL_TEMPLATE_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-excel.template.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Excel Template (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE: {
        _id: 'application/vnd.openxmlformats-officedocument.spreadsheetml.template';
        extensions: any;
        name: 'Microsoft Excel Template (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_POWERPOINT: {
        _id: 'application/vnd.ms-powerpoint';
        extensions: any;
        name: 'Microsoft PowerPoint';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION: {
        _id: 'application/vnd.openxmlformats-officedocument.presentationml.presentation';
        extensions: any;
        name: 'Microsoft PowerPoint (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_POWERPOINT_ADDIN_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.powerpoint.addin.macroEnabled.12';
        extensions: any;
        name: 'Microsoft PowerPoint Addin (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_POWERPOINT_PRESENTATION_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.powerpoint.presentation.macroEnabled.12';
        extensions: any;
        name: 'Microsoft PowerPoint Presentation (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_POWERPOINT_SLIDESHOW_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.powerpoint.slideshow.macroEnabled.12';
        extensions: any;
        name: 'Microsoft PowerPoint Slideshow (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW: {
        _id: 'application/vnd.openxmlformats-officedocument.presentationml.slideshow';
        extensions: any;
        name: 'Microsoft PowerPoint Slideshow (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_POWERPOINT_TEMPLATE_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.powerpoint.template.macroEnabled.12';
        extensions: any;
        name: 'Microsoft PowerPoint Template (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE: {
        _id: 'application/vnd.openxmlformats-officedocument.presentationml.template';
        extensions: any;
        name: 'Microsoft PowerPoint Template (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_VISIO: {
        _id: 'application/vnd.visio';
        extensions: any;
        name: 'Microsoft Visio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_MSWORD: {
        _id: 'application/msword';
        extensions: any;
        name: 'Microsoft Word';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_DOCUMENT_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.document.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Word (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT: {
        _id: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
        extensions: any;
        name: 'Microsoft Word (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MS_WORD_TEMPLATE_MACRO_ENABLED_12: {
        _id: 'application/vnd.ms-word.template.macroEnabled.12';
        extensions: any;
        name: 'Microsoft Word Template (Macro Enabled)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE: {
        _id: 'application/vnd.openxmlformats-officedocument.wordprocessingml.template';
        extensions: any;
        name: 'Microsoft Word Template (OpenXML)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_MIDI: {
        _id: 'audio/midi';
        extensions: any;
        name: 'Musical Instrument Digital Interface (MIDI)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_X_MIDI: {
        _id: 'audio/x-midi';
        extensions: any;
        name: 'Musical Instrument Digital Interface (MIDI)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_OGG: {
        _id: 'application/ogg';
        extensions: any;
        name: 'OGG';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_OGG: {
        _id: 'audio/ogg';
        extensions: any;
        name: 'OGG audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_OGG: {
        _id: 'video/ogg';
        extensions: any;
        name: 'OGG video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION: {
        _id: 'application/vnd.oasis.opendocument.presentation';
        extensions: any;
        name: 'OpenDocument presentation document';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET: {
        _id: 'application/vnd.oasis.opendocument.spreadsheet';
        extensions: any;
        name: 'OpenDocument spreadsheet document';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT: {
        _id: 'application/vnd.oasis.opendocument.text';
        extensions: any;
        name: 'OpenDocument text document';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      FONT_OTF: {
        _id: 'font/otf';
        extensions: any;
        name: 'OpenType font';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_PNG: {
        _id: 'image/png';
        extensions: any;
        name: 'Portable Network Graphics';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_RAR_COMPRESSED: {
        _id: 'application/x-rar-compressed';
        extensions: any;
        name: 'RAR archive';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_RICHTEXT: {
        _id: 'text/richtext';
        extensions: any;
        name: 'Rich Text Format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_RTF: {
        _id: 'application/rtf';
        extensions: any;
        name: 'Rich Text Format (RTF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_RTF: {
        _id: 'application/x-rtf';
        extensions: any;
        name: 'Rich Text Format (RTF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_SVG_XML: {
        _id: 'image/svg+xml';
        extensions: any;
        name: 'Scalable Vector Graphics (SVG)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_SHOCKWAVE_FLASH: {
        _id: 'application/x-shockwave-flash';
        extensions: any;
        name: 'Small web format (SWF) or Adobe Flash document';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_TIFF: {
        _id: 'image/tiff';
        extensions: any;
        name: 'Tagged Image File Format (TIFF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_TAR: {
        _id: 'application/x-tar';
        extensions: any;
        name: 'Tape Archive (TAR)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_PLAIN: {
        _id: 'text/plain';
        extensions: any;
        name: 'Text, (generally ASCII or ISO 8859-n)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      FONT_TTF: {
        _id: 'font/ttf';
        extensions: any;
        name: 'TrueType Font';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_WEBM: {
        _id: 'audio/webm';
        extensions: any;
        name: 'WEBM audio';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      VIDEO_WEBM: {
        _id: 'video/webm';
        extensions: any;
        name: 'WEBM video';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_WEBP: {
        _id: 'image/webp';
        extensions: any;
        name: 'WEBP image';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_WAV: {
        _id: 'audio/wav';
        extensions: any;
        name: 'Waveform Audio Format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      AUDIO_X_WAV: {
        _id: 'audio/x-wav';
        extensions: any;
        name: 'Waveform Audio Format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      FONT_WOFF: {
        _id: 'font/woff';
        extensions: any;
        name: 'Web Open Font Format (WOFF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      FONT_WOFF_2: {
        _id: 'font/woff2';
        extensions: any;
        name: 'Web Open Font Format (WOFF)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_EMF: {
        _id: 'application/emf';
        extensions: any;
        name: 'Windows Enhanced Metafile';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_EMF: {
        _id: 'application/x-emf';
        extensions: any;
        name: 'Windows Enhanced Metafile';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_X_EMF: {
        _id: 'image/x-emf';
        extensions: any;
        name: 'Windows Enhanced Metafile';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_X_MGX_EMF: {
        _id: 'image/x-mgx-emf';
        extensions: any;
        name: 'Windows Enhanced Metafile';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_X_XBITMAP: {
        _id: 'image/x-xbitmap';
        extensions: any;
        name: 'Windows Enhanced Metafile';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      IMAGE_BMP: {
        _id: 'image/bmp';
        extensions: any;
        name: 'Windows OS/2 Bitmap Graphics';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_XHTML_XML: {
        _id: 'application/xhtml+xml';
        extensions: any;
        name: 'XHTML';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_XML: {
        _id: 'text/xml';
        extensions: any;
        name: 'XML; if readable from casual users (RFC 3023, section 3)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_XML: {
        _id: 'application/xml';
        extensions: any;
        name: 'XML; not readable from casual users (RFC 3023, section 3)';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_VND_MOZILLA_XUL_XML: {
        _id: 'application/vnd.mozilla.xul+xml';
        extensions: any;
        name: 'XUL';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_COMPRESSED: {
        _id: 'application/x-compressed';
        extensions: any;
        name: 'ZIP Archive';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      MULTIPART_X_ZIP: {
        _id: 'multipart/x-zip';
        extensions: any;
        name: 'ZIP Archive';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_X_ZIP_COMPRESSED: {
        _id: 'application/x-zip-compressed';
        extensions: any;
        name: 'ZIP archive';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_ZIP: {
        _id: 'application/zip';
        extensions: any;
        name: 'ZIP archive';
        unsafe: any;
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      APPLICATION_OCTET_STREAM: {
        _id: 'application/octet-stream';
        extensions: any;
        name: 'binary data';
        notes: 'Any kind of binary data';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

      TEXT_CALENDAR: {
        _id: 'text/calendar';
        extensions: any;
        name: 'iCalendar format';
      } & MediaType<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "TyrLogEventCollection"
   */
  export interface TyrLogEventCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      HTTP: {
        _id: 'http';
        label: 'HTTP';
        notes: 'HTTP Requests';
      } & TyrLogEvent<ObjIdType, ObjContainer, NumContainer>;

      DATABASE: {
        _id: 'db';
        label: 'Database';
        notes: 'Database Requests';
      } & TyrLogEvent<ObjIdType, ObjContainer, NumContainer>;

      HISTORICAL: {
        _id: 'historical';
        label: 'Historical';
        notes: 'Historical diagnostics';
      } & TyrLogEvent<ObjIdType, ObjContainer, NumContainer>;

      SUBSCRIPTIONS: {
        _id: 'subscription';
        label: 'Subscriptions';
        notes: 'Subscription diagnostics';
      } & TyrLogEvent<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "TyrLogLevelCollection"
   */
  export interface TyrLogLevelCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      ERROR: {
        _id: 5;
        name: 'error';
        code: 'E';
        method: 'error';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      FATAL: {
        _id: 6;
        name: 'fatal';
        code: 'F';
        method: 'error';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      INFO: {
        _id: 3;
        name: 'info';
        code: 'I';
        method: 'info';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      LOG: {
        _id: 2;
        name: 'log';
        code: 'L';
        method: 'log';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      NEVER: {
        _id: 7;
        name: 'never';
        code: 'N';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      TRACE: {
        _id: 1;
        name: 'trace';
        code: 'T';
        method: 'trace';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

      WARN: {
        _id: 4;
        name: 'warn';
        code: 'W';
        method: 'warn';
      } & TyrLogLevel<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "TyrMarkupTypeCollection"
   */
  export interface TyrMarkupTypeCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      HTML: {
        _id: 1;
        name: 'HTML';
      } & TyrMarkupType<ObjIdType, ObjContainer, NumContainer>;

      MARKDOWN: {
        _id: 2;
        name: 'Markdown';
      } & TyrMarkupType<ObjIdType, ObjContainer, NumContainer>;

      SASS: {
        _id: 3;
        name: 'SASS';
      } & TyrMarkupType<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "TyrSchemaTypeCollection"
   */
  export interface TyrSchemaTypeCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      FULL: {
        _id: 1;
        name: 'Full';
      } & TyrSchemaType<ObjIdType, ObjContainer, NumContainer>;

      PARTIAL: {
        _id: 2;
        name: 'Partial';
      } & TyrSchemaType<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "UnitCollection"
   */
  export interface UnitCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      ACRE: {
        _id: 74;
        name: 'acre';
        abbreviation: 'acre';
        formula: 'chain*furlong';
        type: any;
        system: any;
        sid: 'acre';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      AMPERE: {
        _id: 4;
        name: 'ampere';
        abbreviation: 'A';
        formula: any;
        type: any;
        system: any;
        sid: 'A';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      AMPERE_PER_METER: {
        _id: 17;
        name: 'amperePerMeter';
        abbreviation: any;
        formula: 'A/m';
        type: any;
        system: any;
        sid: 'A_m';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      AMPERE_PER_SQUARE_METER: {
        _id: 16;
        name: 'amperePerSquareMeter';
        abbreviation: any;
        formula: 'A/m2';
        type: any;
        system: any;
        sid: 'A_m2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      BECQUEREL: {
        _id: 39;
        name: 'becquerel';
        abbreviation: 'Bq';
        formula: 's-1';
        type: any;
        system: any;
        sid: 'Bq';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      BIT: {
        _id: 103;
        name: 'bit';
        abbreviation: 'bit';
        formula: any;
        type: any;
        system: any;
        sid: 'bit';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      BYTE: {
        _id: 106;
        name: 'byte';
        abbreviation: 'B';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 8;
        sid: 'B';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CANDELA: {
        _id: 7;
        name: 'candela';
        abbreviation: 'cd';
        formula: any;
        type: any;
        system: any;
        sid: 'cd';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CANDELA_PER_SQUARE_METER: {
        _id: 19;
        name: 'candelaPerSquareMeter';
        abbreviation: any;
        formula: 'cd/m2';
        type: any;
        system: any;
        sid: 'cd_m2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CELSIUS: {
        _id: 75;
        name: 'celsius';
        abbreviation: 'degC';
        formula: any;
        type: any;
        system: any;
        baseAdditive: 273.15;
        sid: 'degC';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CHAIN: {
        _id: 73;
        name: 'chain';
        abbreviation: 'chain';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 20.1168;
        sid: 'chain';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      COULOMB: {
        _id: 29;
        name: 'coulomb';
        abbreviation: 'C';
        formula: 's1A1';
        type: any;
        system: any;
        sid: 'C';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      COULOMB_PER_CUBIC_METER: {
        _id: 55;
        name: 'coulombPerCubicMeter';
        abbreviation: any;
        formula: 'C/m3';
        type: any;
        system: any;
        sid: 'C_m3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      COULOMB_PER_KILOGRAM: {
        _id: 61;
        name: 'coulombPerKilogram';
        abbreviation: any;
        formula: 'C/kg';
        type: any;
        system: any;
        sid: 'C_kg';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      COULOMB_PER_SQUARE_METER: {
        _id: 56;
        name: 'coulombPerSquareMeter';
        abbreviation: any;
        formula: 'C/m2';
        type: any;
        system: any;
        sid: 'C_m2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CRUMB: {
        _id: 104;
        name: 'crumb';
        abbreviation: 'crumb';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 2;
        sid: 'crumb';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CUBIC_METER: {
        _id: 10;
        name: 'cubicMeter';
        abbreviation: any;
        formula: 'm3';
        type: any;
        system: any;
        sid: 'm3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CUBIC_METER_PER_KILOGRAM: {
        _id: 15;
        name: 'cubicMeterPerKilogram';
        abbreviation: any;
        formula: 'm3/kg';
        type: any;
        system: any;
        sid: 'm3_kg';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CUBIT: {
        _id: 68;
        name: 'cubit';
        abbreviation: 'cubit';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.4572;
        sid: 'cubit';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      CUP: {
        _id: 97;
        name: 'cup';
        abbreviation: 'cp';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000236588;
        sid: 'cp';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      DAY: {
        _id: 82;
        name: 'day';
        abbreviation: 'day';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 86400;
        sid: 'day';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      DOLLAR: {
        _id: 8;
        name: 'dollar';
        abbreviation: 'USD';
        formula: any;
        type: any;
        system: any;
        sid: 'USD';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      DRAM: {
        _id: 87;
        name: 'dram';
        abbreviation: 'dr';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.00177185;
        sid: 'dr';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      EURO: {
        _id: 114;
        name: 'euro';
        abbreviation: 'EUR';
        formula: any;
        type: any;
        system: any;
        sid: 'EUR';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FAHRENHEIT: {
        _id: 76;
        name: 'fahrenheit';
        abbreviation: 'degF';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.555555556;
        baseAdditive: 255.372222222;
        sid: 'degF';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FARAD: {
        _id: 31;
        name: 'farad';
        abbreviation: 'F';
        formula: 'C/V';
        type: any;
        system: any;
        sid: 'F';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FARAD_PER_METER: {
        _id: 57;
        name: 'faradPerMeter';
        abbreviation: any;
        formula: 'F/m';
        type: any;
        system: any;
        sid: 'F_m';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FLUID_OUNCE: {
        _id: 96;
        name: 'fluidOunce';
        abbreviation: 'floz';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000029574;
        sid: 'floz';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FOOT: {
        _id: 67;
        name: 'foot';
        abbreviation: 'ft';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.3048;
        sid: 'ft';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      FURLONG: {
        _id: 70;
        name: 'furlong';
        abbreviation: 'furlong';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 201.168;
        sid: 'furlong';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      GALLON: {
        _id: 100;
        name: 'gallon';
        abbreviation: 'gal';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.003785412;
        sid: 'gal';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      GRAIN: {
        _id: 86;
        name: 'grain';
        abbreviation: 'gr';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.06479891;
        sid: 'gr';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      GRAM: {
        _id: 2;
        name: 'gram';
        abbreviation: 'g';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.001;
        sid: 'g';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      GRAY: {
        _id: 40;
        name: 'gray';
        abbreviation: 'Gy';
        formula: 'J/kg';
        type: any;
        system: any;
        sid: 'Gy';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      GRAY_PER_SECOND: {
        _id: 62;
        name: 'grayPerSecond';
        abbreviation: any;
        formula: 'Gy/s';
        type: any;
        system: any;
        sid: 'Gy_s';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      HENRY: {
        _id: 36;
        name: 'henry';
        abbreviation: 'H';
        formula: 'Wb/A';
        type: any;
        system: any;
        sid: 'H';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      HENRY_PER_METER: {
        _id: 58;
        name: 'henryPerMeter';
        abbreviation: any;
        formula: 'H/m';
        type: any;
        system: any;
        sid: 'H_m';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      HERTZ: {
        _id: 23;
        name: 'hertz';
        abbreviation: 'Hz';
        formula: 's-1';
        type: any;
        system: any;
        sid: 'Hz';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      HOUR: {
        _id: 81;
        name: 'hour';
        abbreviation: 'h';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 3600;
        sid: 'h';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      HUNDREDWEIGHT: {
        _id: 90;
        name: 'hundredweight';
        abbreviation: 'cwt';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 50.80234544;
        sid: 'cwt';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      INCH: {
        _id: 66;
        name: 'inch';
        abbreviation: 'in';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.0254;
        sid: 'in';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE: {
        _id: 27;
        name: 'joule';
        abbreviation: 'J';
        formula: 'N1m1';
        type: any;
        system: any;
        sid: 'J';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_CUBIC_METER: {
        _id: 53;
        name: 'joulePerCubicMeter';
        abbreviation: any;
        formula: 'J/m3';
        type: any;
        system: any;
        sid: 'J_m3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_KELVIN: {
        _id: 49;
        name: 'joulePerKelvin';
        abbreviation: any;
        formula: 'J/K';
        type: any;
        system: any;
        sid: 'J_K';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_KILOGRAM: {
        _id: 51;
        name: 'joulePerKilogram';
        abbreviation: any;
        formula: 'J/kg';
        type: any;
        system: any;
        sid: 'J_kg';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_KILOGRAM_KELVIN: {
        _id: 50;
        name: 'joulePerKilogramKelvin';
        abbreviation: any;
        formula: 'J/kg1K1';
        type: any;
        system: any;
        sid: 'J_kg1K1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_MOLE: {
        _id: 59;
        name: 'joulePerMole';
        abbreviation: any;
        formula: 'J/mol';
        type: any;
        system: any;
        sid: 'J_mol';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      JOULE_PER_MOLE_KELVIN: {
        _id: 60;
        name: 'joulePerMoleKelvin';
        abbreviation: any;
        formula: 'J/mol1K1';
        type: any;
        system: any;
        sid: 'J_mol1K1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      KATAL: {
        _id: 42;
        name: 'katal';
        abbreviation: 'kat';
        formula: 'mol/s';
        type: any;
        system: any;
        sid: 'kat';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      KATAL_PER_CUBIC_METER: {
        _id: 65;
        name: 'katalPerCubicMeter';
        abbreviation: any;
        formula: 'kat/m3';
        type: any;
        system: any;
        sid: 'kat_m3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      KELVIN: {
        _id: 5;
        name: 'kelvin';
        abbreviation: 'K';
        formula: any;
        type: any;
        system: any;
        sid: 'K';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      KILOGRAM_PER_CUBIC_METER: {
        _id: 14;
        name: 'kilogramPerCubicMeter';
        abbreviation: any;
        formula: 'kg/m3';
        type: any;
        system: any;
        sid: 'kg_m3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      KNOT: {
        _id: 102;
        name: 'knot';
        abbreviation: 'knot';
        formula: 'nautmi/h';
        type: any;
        system: any;
        sid: 'knot';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      LEAGUE: {
        _id: 72;
        name: 'league';
        abbreviation: 'league';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 5556;
        sid: 'league';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      LITER: {
        _id: 93;
        name: 'liter';
        abbreviation: 'L';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.001;
        sid: 'L';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      LONG_TON: {
        _id: 92;
        name: 'longTon';
        abbreviation: 'longTon';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1016.04691;
        sid: 'longTon';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      LUMEN: {
        _id: 37;
        name: 'lumen';
        abbreviation: 'lm';
        formula: 'cd1sr1';
        type: any;
        system: any;
        sid: 'lm';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      LUX: {
        _id: 38;
        name: 'lux';
        abbreviation: 'lx';
        formula: 'lm/m2';
        type: any;
        system: any;
        sid: 'lx';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      METER: {
        _id: 1;
        name: 'meter';
        abbreviation: 'm';
        formula: any;
        type: any;
        system: any;
        sid: 'm';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      METER_PER_SECOND: {
        _id: 11;
        name: 'meterPerSecond';
        abbreviation: any;
        formula: 'm/s';
        type: any;
        system: any;
        sid: 'm_s';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      METER_PER_SECOND_SQUARED: {
        _id: 12;
        name: 'meterPerSecondSquared';
        abbreviation: any;
        formula: 'm/s2';
        type: any;
        system: any;
        sid: 'm_s2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      MILE: {
        _id: 71;
        name: 'mile';
        abbreviation: 'mi';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1609.344;
        sid: 'mi';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      MINUTE: {
        _id: 80;
        name: 'minute';
        abbreviation: 'min';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 60;
        sid: 'min';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      MOLE: {
        _id: 6;
        name: 'mole';
        abbreviation: 'mol';
        formula: any;
        type: any;
        system: any;
        sid: 'mol';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      MOLE_PER_CUBIC_METER: {
        _id: 18;
        name: 'molePerCubicMeter';
        abbreviation: any;
        formula: 'mol/m3';
        type: any;
        system: any;
        sid: 'mol_m3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      MONTH: {
        _id: 84;
        name: 'month';
        abbreviation: 'mon';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 2419200;
        sid: 'mon';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      NAUTICAL_MILE: {
        _id: 101;
        name: 'nauticalMile';
        abbreviation: 'nautmi';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1852;
        sid: 'nautmi';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      NEWTON: {
        _id: 24;
        name: 'newton';
        abbreviation: 'N';
        formula: 'm1kg1/s2';
        type: any;
        system: any;
        sid: 'N';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      NEWTON_METER: {
        _id: 26;
        name: 'newtonMeter';
        abbreviation: any;
        formula: 'N1m1';
        type: any;
        system: any;
        sid: 'N1m1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      NEWTON_PER_METER: {
        _id: 45;
        name: 'newtonPerMeter';
        abbreviation: any;
        formula: 'N/m';
        type: any;
        system: any;
        sid: 'N_m';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      NIBBLE: {
        _id: 105;
        name: 'nibble';
        abbreviation: 'nibble';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 4;
        sid: 'nibble';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      OHM: {
        _id: 32;
        name: 'ohm';
        abbreviation: 'OHM';
        formula: 'V/A';
        type: any;
        system: any;
        sid: 'OHM';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      OUNCE: {
        _id: 88;
        name: 'ounce';
        abbreviation: 'oz';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.0283495;
        sid: 'oz';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PASCAL: {
        _id: 25;
        name: 'pascal';
        abbreviation: 'Pa';
        formula: 'N/m2';
        type: any;
        system: any;
        sid: 'Pa';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PASCAL_SECOND: {
        _id: 43;
        name: 'pascalSecond';
        abbreviation: any;
        formula: 'Pa1s1';
        type: any;
        system: any;
        sid: 'Pa1s1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PINT: {
        _id: 98;
        name: 'pint';
        abbreviation: 'pt';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000473176;
        sid: 'pt';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_AREA: {
        _id: 112;
        name: 'planckArea';
        abbreviation: any;
        formula: 'lP2';
        type: any;
        system: any;
        sid: 'lP2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_CHARGE: {
        _id: 110;
        name: 'planckCharge';
        abbreviation: 'qP';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1.875545956e-18;
        sid: 'qP';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_LENGTH: {
        _id: 107;
        name: 'planckLength';
        abbreviation: 'lP';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1.616199e-35;
        sid: 'lP';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_MASS: {
        _id: 108;
        name: 'planckMass';
        abbreviation: 'mP';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 2.17651e-8;
        sid: 'mP';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_TEMPERATURE: {
        _id: 111;
        name: 'planckTemperature';
        abbreviation: 'TP';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1.416833e+32;
        sid: 'TP';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_TIME: {
        _id: 109;
        name: 'planckTime';
        abbreviation: 'tP';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 5.39106e-44;
        sid: 'tP';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      PLANCK_VOLUME: {
        _id: 113;
        name: 'planckVolume';
        abbreviation: any;
        formula: 'lP3';
        type: any;
        system: any;
        sid: 'lP3';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      POUND: {
        _id: 89;
        name: 'pound';
        abbreviation: 'lb';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.45359237;
        sid: 'lb';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      QUART: {
        _id: 99;
        name: 'quart';
        abbreviation: 'qt';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000946353;
        sid: 'qt';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      RADIAN: {
        _id: 21;
        name: 'radian';
        abbreviation: 'rad';
        formula: 'm/m';
        type: any;
        system: any;
        sid: 'rad';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      RADIAN_PER_SECOND: {
        _id: 46;
        name: 'radianPerSecond';
        abbreviation: any;
        formula: 'rad/s';
        type: any;
        system: any;
        sid: 'rad_s';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      RADIAN_PER_SECOND_SQUARED: {
        _id: 47;
        name: 'radianPerSecondSquared';
        abbreviation: any;
        formula: 'rad/s2';
        type: any;
        system: any;
        sid: 'rad_s2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      RECIPROCAL_METER: {
        _id: 13;
        name: 'reciprocalMeter';
        abbreviation: any;
        formula: 'm-1';
        type: any;
        system: any;
        sid: 'm-1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      ROD: {
        _id: 77;
        name: 'rod';
        abbreviation: 'rod';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 5.0292;
        sid: 'rod';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      SECOND: {
        _id: 3;
        name: 'second';
        abbreviation: 's';
        formula: any;
        type: any;
        system: any;
        sid: 's';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      SHORT_TON: {
        _id: 91;
        name: 'shortTon';
        abbreviation: 'shortTon';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 907.18474;
        sid: 'shortTon';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      SIEMENS: {
        _id: 33;
        name: 'siemens';
        abbreviation: 'S';
        formula: 'A/V';
        type: any;
        system: any;
        sid: 'S';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      SIEVERT: {
        _id: 41;
        name: 'sievert';
        abbreviation: 'Sv';
        formula: 'J/kg';
        type: any;
        system: any;
        sid: 'Sv';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      SQUARE_METER: {
        _id: 9;
        name: 'squareMeter';
        abbreviation: any;
        formula: 'm2';
        type: any;
        system: any;
        sid: 'm2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      STERADIAN: {
        _id: 22;
        name: 'steradian';
        abbreviation: 'sr';
        formula: 'm2/m2';
        type: any;
        system: any;
        sid: 'sr';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      TABLESPOON: {
        _id: 95;
        name: 'tablespoon';
        abbreviation: 'tbsp';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000014787;
        sid: 'tbsp';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      TEASPOON: {
        _id: 94;
        name: 'teaspoon';
        abbreviation: 'tsp';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.000004929;
        sid: 'tsp';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      TESLA: {
        _id: 35;
        name: 'tesla';
        abbreviation: 'T';
        formula: 'Wb/m2';
        type: any;
        system: any;
        sid: 'T';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      TON: {
        _id: 79;
        name: 'ton';
        abbreviation: 'ton';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 1000;
        sid: 'ton';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      VOID: {
        _id: 78;
        name: 'void';
        abbreviation: 'void';
        formula: any;
        type: any;
        system: any;
        sid: 'void';
        baseMultiplier: 1;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      VOLT: {
        _id: 30;
        name: 'volt';
        abbreviation: 'V';
        formula: 'W/A';
        type: any;
        system: any;
        sid: 'V';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      VOLT_PER_METER: {
        _id: 54;
        name: 'voltPerMeter';
        abbreviation: any;
        formula: 'V/m';
        type: any;
        system: any;
        sid: 'V_m';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WATT: {
        _id: 28;
        name: 'watt';
        abbreviation: 'W';
        formula: 'J/s';
        type: any;
        system: any;
        sid: 'W';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WATT_PER_METER_KELVIN: {
        _id: 52;
        name: 'wattPerMeterKelvin';
        abbreviation: any;
        formula: 'W/m1K1';
        type: any;
        system: any;
        sid: 'W_m1K1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WATT_PER_SQUARE_METER: {
        _id: 48;
        name: 'wattPerSquareMeter';
        abbreviation: any;
        formula: 'W/m2';
        type: any;
        system: any;
        sid: 'W_m2';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WATT_PER_SQUARE_METER_STERADIAN: {
        _id: 64;
        name: 'wattPerSquareMeterSteradian';
        abbreviation: any;
        formula: 'W/m2sr1';
        type: any;
        system: any;
        sid: 'W_m2sr1';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WATT_PER_STERADIAN: {
        _id: 63;
        name: 'wattPerSteradian';
        abbreviation: any;
        formula: 'W/sr';
        type: any;
        system: any;
        sid: 'W_sr';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WEBER: {
        _id: 34;
        name: 'weber';
        abbreviation: 'Wb';
        formula: 'V*s';
        type: any;
        system: any;
        sid: 'Wb';
        baseMultiplier: 1;
        units: any;
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      WEEK: {
        _id: 83;
        name: 'week';
        abbreviation: 'week';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 604800;
        sid: 'week';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      YARD: {
        _id: 69;
        name: 'yard';
        abbreviation: 'yd';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 0.9144;
        sid: 'yd';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

      YEAR: {
        _id: 85;
        name: 'year';
        abbreviation: 'Yr';
        formula: any;
        type: any;
        system: any;
        baseMultiplier: 31449600;
        sid: 'Yr';
      } & Unit<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "UnitFactorCollection"
   */
  export interface UnitFactorCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      YOTTA: {
        _id: 1;
        symbol: 'Y';
        prefix: 'yotta';
        factor: 1e+24;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      ZETTA: {
        _id: 1;
        symbol: 'Z';
        prefix: 'zetta';
        factor: 1e+21;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      EXA: {
        _id: 1;
        symbol: 'E';
        prefix: 'exa';
        factor: 1000000000000000000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      PETA: {
        _id: 1;
        symbol: 'P';
        prefix: 'peta';
        factor: 1000000000000000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      TERA: {
        _id: 1;
        symbol: 'T';
        prefix: 'tera';
        factor: 1000000000000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      GIGA: {
        _id: 1;
        symbol: 'G';
        prefix: 'giga';
        factor: 1000000000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      MEGA: {
        _id: 1;
        symbol: 'M';
        prefix: 'mega';
        factor: 1000000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      MYRIA: {
        _id: 1;
        symbol: 'my';
        prefix: 'myria';
        factor: 10000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      KILO: {
        _id: 1;
        symbol: 'k';
        prefix: 'kilo';
        factor: 1000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      HECTO: {
        _id: 1;
        symbol: 'h';
        prefix: 'hecto';
        factor: 100;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      DECA: {
        _id: 1;
        symbol: 'da';
        prefix: 'deca';
        factor: 10;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      DECI: {
        _id: 1;
        symbol: 'd';
        prefix: 'deci';
        factor: 0.1;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      CENTI: {
        _id: 1;
        symbol: 'c';
        prefix: 'centi';
        factor: 0.01;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      MILLI: {
        _id: 1;
        symbol: 'm';
        prefix: 'milli';
        factor: 0.001;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      MICRO: {
        _id: 1;
        symbol: 'u';
        prefix: 'micro';
        factor: 0.000001;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      NANO: {
        _id: 1;
        symbol: 'n';
        prefix: 'nano';
        factor: 1e-9;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      PICO: {
        _id: 1;
        symbol: 'p';
        prefix: 'pico';
        factor: 1e-12;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      FEMTO: {
        _id: 1;
        symbol: 'f';
        prefix: 'femto';
        factor: 1e-15;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      ATTO: {
        _id: 1;
        symbol: 'a';
        prefix: 'atto';
        factor: 1e-18;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      ZEPTO: {
        _id: 1;
        symbol: 'z';
        prefix: 'zepto';
        factor: 1e-21;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      YOCTO: {
        _id: 1;
        symbol: 'y';
        prefix: 'yocto';
        factor: 1e-24;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      KIBI: {
        _id: 1;
        symbol: 'Ki';
        prefix: 'kibi';
        factor: 1024;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      MEBI: {
        _id: 1;
        symbol: 'Mi';
        prefix: 'mebi';
        factor: 1048576;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      GIBI: {
        _id: 1;
        symbol: 'Gi';
        prefix: 'gibi';
        factor: 1073741824;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      TEBI: {
        _id: 1;
        symbol: 'Ti';
        prefix: 'tebi';
        factor: 1099511627776;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      PEBI: {
        _id: 1;
        symbol: 'Pi';
        prefix: 'pebi';
        factor: 1125899906842624;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      EXBI: {
        _id: 1;
        symbol: 'Ei';
        prefix: 'exbi';
        factor: 1152921504606847000;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      ZEBI: {
        _id: 1;
        symbol: 'Zi';
        prefix: 'zebi';
        factor: 1.1805916207174113e+21;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

      YOBI: {
        _id: 1;
        symbol: 'Yi';
        prefix: 'yobi';
        factor: 1.2089258196146292e+24;
      } & UnitFactor<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "UnitSystemCollection"
   */
  export interface UnitSystemCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      CURRENCY: {
        _id: 4;
        name: 'currency';
        url: 'Uses Fixer for exchange rates -- https://fixer.io';
      } & UnitSystem<ObjIdType, ObjContainer, NumContainer>;

      ENGLISH: {
        _id: 2;
        name: 'english';
        url: 'https://en.wikipedia.org/wiki/English_units';
      } & UnitSystem<ObjIdType, ObjContainer, NumContainer>;

      METRIC: {
        _id: 1;
        name: 'metric';
        url: 'https://en.wikipedia.org/wiki/International_System_of_Units';
      } & UnitSystem<ObjIdType, ObjContainer, NumContainer>;

      PLANCK: {
        _id: 3;
        name: 'planck';
        url: 'https://en.wikipedia.org/wiki/Planck_units';
      } & UnitSystem<ObjIdType, ObjContainer, NumContainer>;

  }
  
  /**
   * Static properties for enum collection "UnitTypeCollection"
   */
  export interface UnitTypeCollectionEnumStatic<ObjIdType = string, ObjContainer = Inserted<string>, NumContainer = Inserted<number>> {
    
      ABSORBED_DOSE: {
        _id: 41;
        name: 'absorbedDose';
        formula: 'l2/s2';
        note: 'Absorbed dose, specific energy (imparted), kerma.';
        components: any;
        sid: 'l2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ABSORBED_DOSE_RATE: {
        _id: 62;
        name: 'absorbedDoseRate';
        formula: 'l2/s3';
        components: any;
        sid: 'l2s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ACCELERATION: {
        _id: 14;
        name: 'acceleration';
        formula: 'l/s2';
        components: any;
        sid: 'l1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ACTIVITY: {
        _id: 40;
        name: 'activity';
        formula: 's-1';
        note: 'Activity (referred to a radionuclide).';
        components: any;
        sid: 's-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ANGULAR_ACCELERATION: {
        _id: 47;
        name: 'angularAcceleration';
        formula: 'l1/l1s2';
        components: any;
        sid: 'l1l-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ANGULAR_VELOCITY: {
        _id: 46;
        name: 'angularVelocity';
        formula: 'l1/l1s1';
        components: any;
        sid: 'l1l-1s-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      AREA: {
        _id: 11;
        name: 'area';
        formula: 'l2';
        components: any;
        sid: 'l2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      BIT: {
        _id: 10;
        name: 'bit';
        formula: any;
        abbreviation: 'bit';
        normal: 'bit';
        note: 'Binary digit.';
        sid: 'bit';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      BIT_RATE: {
        _id: 66;
        name: 'bitRate';
        formula: 'bit/s';
        components: any;
        sid: 'bit1s-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CAPACITANCE: {
        _id: 32;
        name: 'capacitance';
        formula: 's4cur2/m1l2';
        components: any;
        sid: 'cur2s4m-1l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CATALYTIC_ACTIVITY: {
        _id: 43;
        name: 'catalyticActivity';
        formula: 'sub/s';
        components: any;
        sid: 'sub1s-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CATALYTIC_CONCENTRATION: {
        _id: 65;
        name: 'catalyticConcentration';
        formula: 'sub1/l3s1';
        note: 'Catalytic (activity) concentration.';
        components: any;
        sid: 'sub1s-1l-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CONCENTRATION: {
        _id: 20;
        name: 'concentration';
        formula: 'sub/l3';
        components: any;
        sid: 'sub1l-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CURRENCY: {
        _id: 9;
        name: 'currency';
        formula: any;
        abbreviation: 'c';
        note: '';
        sid: 'c';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CURRENT: {
        _id: 5;
        name: 'current';
        formula: any;
        abbreviation: 'cur';
        normal: 'A';
        note: 'Electric current.';
        sid: 'cur';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      CURRENT_DENSITY: {
        _id: 18;
        name: 'currentDensity';
        formula: 'cur/l2';
        components: any;
        sid: 'cur1l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      DENSITY: {
        _id: 16;
        name: 'density';
        formula: 'm/l3';
        components: any;
        sid: 'm1l-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      DOSE_EQUIVALENT: {
        _id: 42;
        name: 'doseEquivalent';
        formula: 'l2/s2';
        note: 'Dose equivalent, ambient dose equivalent, directional dose equivalent, personal dose equivalent, organ dose equivalent.';
        components: any;
        sid: 'l2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      DURATION: {
        _id: 4;
        name: 'duration';
        formula: any;
        abbreviation: 's';
        normal: 's';
        note: 'Time.';
        sid: 's';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      DYNAMIC_VISCOSITY: {
        _id: 44;
        name: 'dynamicViscosity';
        formula: 'm1/l1s1';
        components: any;
        sid: 'm1l-1s-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_CHARGE: {
        _id: 30;
        name: 'electricCharge';
        formula: 's1cur1';
        note: 'Electric charge, quantity of electricity.';
        components: any;
        sid: 'cur1s1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_CHARGE_DENSITY: {
        _id: 55;
        name: 'electricChargeDensity';
        formula: 's1cur1/l3';
        components: any;
        sid: 'cur1s1l-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_CONDUCTANCE: {
        _id: 34;
        name: 'electricConductance';
        formula: 's3cur2/l2m1';
        components: any;
        sid: 'cur2s3m-1l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_FIELD_STRENGTH: {
        _id: 54;
        name: 'electricFieldStrength';
        formula: 'l1m1/s3cur1';
        components: any;
        sid: 'l1m1cur-1s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_FLUX_DENSITY: {
        _id: 56;
        name: 'electricFluxDensity';
        formula: 's1cur1/l2';
        components: any;
        sid: 'cur1s1l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ELECTRIC_RESISTANCE: {
        _id: 33;
        name: 'electricResistance';
        formula: 'l2m1/s3cur2';
        components: any;
        sid: 'm1l2cur-2s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ENERGY: {
        _id: 28;
        name: 'energy';
        formula: 'l2m1/s2';
        note: 'Energy, work, quantity of heat.';
        components: any;
        sid: 'm1l2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ENERGY_DENSITY: {
        _id: 53;
        name: 'energyDensity';
        formula: 'm1/l1s2';
        components: any;
        sid: 'm1l-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ENTROPY: {
        _id: 49;
        name: 'entropy';
        formula: 'l2m1/s2t1';
        note: 'Heat capacity, entropy.';
        components: any;
        sid: 'm1l2t-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      EXPOSURE: {
        _id: 61;
        name: 'exposure';
        formula: 's1cur1/m1';
        components: any;
        sid: 'cur1s1m-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      FORCE: {
        _id: 25;
        name: 'force';
        formula: 'l1m1/s2';
        components: any;
        sid: 'l1m1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      FREQUENCY: {
        _id: 24;
        name: 'frequency';
        formula: 's-1';
        components: any;
        sid: 's-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      ILLUMINANCE: {
        _id: 39;
        name: 'illuminance';
        formula: 'l2lum1/l4';
        components: any;
        sid: 'lum1l2l-4';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      INDUCTANCE: {
        _id: 37;
        name: 'inductance';
        formula: 'l2m1/s2cur2';
        components: any;
        sid: 'm1l2cur-2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      IRRADIANCE: {
        _id: 48;
        name: 'irradiance';
        formula: 'm1/s3';
        note: 'Heat flux density, irradiance.';
        components: any;
        sid: 'm1s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      LENGTH: {
        _id: 2;
        name: 'length';
        formula: any;
        abbreviation: 'l';
        normal: 'm';
        note: 'Length.';
        sid: 'l';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      LUMINANCE: {
        _id: 21;
        name: 'luminance';
        formula: 'lum/l2';
        components: any;
        sid: 'lum1l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      LUMINOSITY: {
        _id: 8;
        name: 'luminosity';
        formula: any;
        abbreviation: 'lum';
        normal: 'cd';
        note: 'Luminous intensity.';
        sid: 'lum';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      LUMINOUS_FLUX: {
        _id: 38;
        name: 'luminousFlux';
        formula: 'l2lum1/l2';
        components: any;
        sid: 'lum1l2l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MAGNETIC_FIELD_STRENGTH: {
        _id: 19;
        name: 'magneticFieldStrength';
        formula: 'cur/l';
        components: any;
        sid: 'cur1l-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MAGNETIC_FLUX: {
        _id: 35;
        name: 'magneticFlux';
        formula: 'l2m1/s2cur1';
        components: any;
        sid: 'm1l2cur-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MAGNETIC_FLUX_DENSITY: {
        _id: 36;
        name: 'magneticFluxDensity';
        formula: 'm/s2cur1';
        components: any;
        sid: 'm1cur-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MASS: {
        _id: 3;
        name: 'mass';
        formula: any;
        abbreviation: 'm';
        normal: 'kg';
        note: 'Mass.';
        sid: 'm';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MOLAR_ENERGY: {
        _id: 59;
        name: 'molarEnergy';
        formula: 'l2m1/s2sub1';
        components: any;
        sid: 'm1l2sub-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MOLAR_ENTROPY: {
        _id: 60;
        name: 'molarEntropy';
        formula: 'l2m1/s2t1sub1';
        note: 'Molar entropy, molar heat capacity.';
        components: any;
        sid: 'm1l2sub-1t-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      MOMENT_OF_FORCE: {
        _id: 27;
        name: 'momentOfForce';
        formula: 'l2m1/s2';
        components: any;
        sid: 'm1l2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      NONE: {
        _id: 1;
        name: 'none';
        formula: any;
        abbreviation: 'none';
        normal: 'none';
        note: 'No units.';
        sid: 'none';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      PERMEABILITY: {
        _id: 58;
        name: 'permeability';
        formula: 'l1m1/s2cur2';
        components: any;
        sid: 'l1m1cur-2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      PERMITTIVITY: {
        _id: 57;
        name: 'permittivity';
        formula: 's4cur2/m1l3';
        components: any;
        sid: 'cur2s4m-1l-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      PLANE_ANGLE: {
        _id: 22;
        name: 'planeAngle';
        formula: 'l/l';
        components: any;
        sid: 'l1l-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      POWER: {
        _id: 29;
        name: 'power';
        formula: 'l2m1/s3';
        note: 'Power, radiant flux.';
        components: any;
        sid: 'm1l2s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      PRESSURE: {
        _id: 26;
        name: 'pressure';
        formula: 'm1/l1s2';
        note: 'Pressure, stress.';
        components: any;
        sid: 'm1l-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      RADIANCE: {
        _id: 64;
        name: 'radiance';
        formula: 'l2m1/l2s3';
        components: any;
        sid: 'm1l2l-2s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      RADIANT_INTENSITY: {
        _id: 63;
        name: 'radiantIntensity';
        formula: 'l4m1/l2s3';
        components: any;
        sid: 'm1l4l-2s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SOLID_ANGLE: {
        _id: 23;
        name: 'solidAngle';
        formula: 'l2/l2';
        components: any;
        sid: 'l2l-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SPECIFIC_ENERGY: {
        _id: 51;
        name: 'specificEnergy';
        formula: 'l2/s2';
        components: any;
        sid: 'l2s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SPECIFIC_ENTROPY: {
        _id: 50;
        name: 'specificEntropy';
        formula: 'l2/s2t1';
        note: 'Specific heat capacity, specific entropy.';
        components: any;
        sid: 'l2t-1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SPECIFIC_VOLUME: {
        _id: 17;
        name: 'specificVolume';
        formula: 'l3/m';
        components: any;
        sid: 'l3m-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SUBSTANCE: {
        _id: 7;
        name: 'substance';
        formula: any;
        abbreviation: 'sub';
        normal: 'mol';
        note: 'Amount of substance.';
        sid: 'sub';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      SURFACE_TENSION: {
        _id: 45;
        name: 'surfaceTension';
        formula: 'm1/s2';
        components: any;
        sid: 'm1s-2';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      TEMPERATURE: {
        _id: 6;
        name: 'temperature';
        formula: any;
        abbreviation: 't';
        normal: 'K';
        note: 'Thermodynamic temperature.';
        sid: 't';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      THERMAL_CONDUCTIVITY: {
        _id: 52;
        name: 'thermalConductivity';
        formula: 'l1m1/s3t1';
        components: any;
        sid: 'l1m1t-1s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      VELOCITY: {
        _id: 13;
        name: 'velocity';
        formula: 'l/s';
        components: any;
        sid: 'l1s-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      VOLTAGE: {
        _id: 31;
        name: 'voltage';
        formula: 'l2m1/s3cur1';
        note: 'Voltage, electric tension, electric potential difference, electromotive force.';
        components: any;
        sid: 'm1l2cur-1s-3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      VOLUME: {
        _id: 12;
        name: 'volume';
        formula: 'l3';
        components: any;
        sid: 'l3';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

      WAVE_NUMBER: {
        _id: 15;
        name: 'waveNumber';
        formula: 'l-1';
        components: any;
        sid: 'l-1';
      } & UnitType<ObjIdType, ObjContainer, NumContainer>;

  }
  
    
    /**
     * Type alias for enum id values in "country" collection
     */
    export type CountryId =
      4075
     |4076
     |4077
     |4078
     |4079
     |4080
     |4081
     |4082
     |4083
     |4084
     |4085
     |4088
     |4089
     |4090
     |4091
     |4092
     |4093
     |4094
     |4095
     |4096
     |4097
     |4098
     |4099
     |4100
     |4101
     |4102
     |4103
     |4104
     |4105
     |4106
     |4107
     |4108
     |4109
     |4110
     |4111
     |4112
     |4113
     |4114
     |4115
     |4116
     |4117
     |4118
     |4119
     |4120
     |4121
     |4122
     |4123
     |4124
     |4125
     |4126
     |4127
     |4128
     |4129
     |4130
     |4131
     |4132
     |4133
     |4134
     |4135
     |4136
     |4137
     |4138
     |4139
     |4140
     |4141
     |4142
     |4143
     |4144
     |4146
     |4147
     |4148
     |4149
     |4150
     |4151
     |4152
     |4153
     |4154
     |4155
     |4156
     |4157
     |4158
     |4159
     |4160
     |4161
     |4162
     |4163
     |4164
     |4165
     |4166
     |4167
     |4168
     |4169
     |4170
     |4172
     |4173
     |4174
     |4175
     |4176
     |4177
     |4178
     |4179
     |4180
     |4181
     |4182
     |4183
     |4184
     |4185
     |4186
     |4187
     |4188
     |4189
     |4190
     |4191
     |4192
     |4193
     |4194
     |4195
     |4196
     |4197
     |4198
     |4199
     |4200
     |4201
     |4202
     |4203
     |4204
     |4205
     |4206
     |4207
     |4208
     |4209
     |4210
     |4211
     |4212
     |4213
     |4214
     |4215
     |4216
     |4217
     |4218
     |4219
     |4220
     |4221
     |4222
     |4223
     |4224
     |4225
     |4226
     |4227
     |4228
     |4229
     |4230
     |4231
     |4232
     |4233
     |4234
     |4235
     |4236
     |4237
     |4238
     |4239
     |4240
     |4241
     |4242
     |4243
     |4244
     |4245
     |4246
     |4247
     |4248
     |4249
     |4250
     |4251
     |4252
     |4253
     |4254
     |4255
     |4256
     |4257
     |4258
     |4259
     |4260
     |4261
     |4262
     |4263
     |4264
     |4265
     |4266
     |4267
     |4268
     |4269
     |4270
     |4271
     |4272
     |4273
     |4274
     |4275
     |4276
     |4277
     |4278
     |4279
     |4280
     |4281
     |4282
     |4283
     |4284
     |4285
     |4286
     |4287
     |4288
     |4289
     |4290
     |4291
     |4292
     |4293
     |4294
     |4295
     |4296
     |4297
     |4298
     |4299
     |4300
     |4301
     |4302
     |4303
     |4304
     |4305
     |4306
     |4307
     |4308
     |4309
     |4310
     |4311
     |4312
     |4313
     |4314
     |4315
     |4316
     |4317
     |4318
     |4319
     |4320
     |4321
     |4322
     |4323
     |4324
     |4325
     |4326
     |4327;
    
    /**
     * Type alias for enum id values in "mediaType" collection
     */
    export type MediaTypeId =
      'application/ecmascript'
     |'application/emf'
     |'application/epub+zip'
     |'application/excel'
     |'application/java-archive'
     |'application/javascript'
     |'application/json'
     |'application/mp4'
     |'application/msword'
     |'application/octet-stream'
     |'application/ogg'
     |'application/pdf'
     |'application/rtf'
     |'application/vnd.amazon.ebook'
     |'application/vnd.apple.installer+xml'
     |'application/vnd.mozilla.xul+xml'
     |'application/vnd.ms-access'
     |'application/vnd.ms-excel'
     |'application/vnd.ms-excel.addin.macroEnabled.12'
     |'application/vnd.ms-excel.sheet.binary.macroEnabled.12'
     |'application/vnd.ms-excel.sheet.macroEnabled.12'
     |'application/vnd.ms-excel.template.macroEnabled.12'
     |'application/vnd.ms-fontobject'
     |'application/vnd.ms-powerpoint'
     |'application/vnd.ms-word.document.macroEnabled.12'
     |'application/vnd.ms-word.powerpoint.addin.macroEnabled.12'
     |'application/vnd.ms-word.powerpoint.presentation.macroEnabled.12'
     |'application/vnd.ms-word.powerpoint.slideshow.macroEnabled.12'
     |'application/vnd.ms-word.powerpoint.template.macroEnabled.12'
     |'application/vnd.ms-word.template.macroEnabled.12'
     |'application/vnd.oasis.opendocument.presentation'
     |'application/vnd.oasis.opendocument.spreadsheet'
     |'application/vnd.oasis.opendocument.text'
     |'application/vnd.openxmlformats-officedocument.presentationml.presentation'
     |'application/vnd.openxmlformats-officedocument.presentationml.slideshow'
     |'application/vnd.openxmlformats-officedocument.presentationml.template'
     |'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
     |'application/vnd.openxmlformats-officedocument.spreadsheetml.template'
     |'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
     |'application/vnd.openxmlformats-officedocument.wordprocessingml.template'
     |'application/vnd.visio'
     |'application/x-7z-compressed'
     |'application/x-abiword'
     |'application/x-bzip'
     |'application/x-bzip2'
     |'application/x-compressed'
     |'application/x-csh'
     |'application/x-emf'
     |'application/x-excel'
     |'application/x-freearc'
     |'application/x-iwork-keynote-sffkey'
     |'application/x-iwork-numbers-sffnumbers'
     |'application/x-iwork-pages-sffpages'
     |'application/x-javascript'
     |'application/x-msexcel'
     |'application/x-rar-compressed'
     |'application/x-rtf'
     |'application/x-sh'
     |'application/x-shockwave-flash'
     |'application/x-tar'
     |'application/x-zip-compressed'
     |'application/xhtml+xml'
     |'application/xml'
     |'application/zip'
     |'audio/3gpp'
     |'audio/3gpp2'
     |'audio/aac'
     |'audio/midi'
     |'audio/mpeg'
     |'audio/mpeg3'
     |'audio/ogg'
     |'audio/wav'
     |'audio/webm'
     |'audio/x-midi'
     |'audio/x-mpeg-3'
     |'audio/x-wav'
     |'font/otf'
     |'font/ttf'
     |'font/woff'
     |'font/woff2'
     |'image/bmp'
     |'image/gif'
     |'image/jpeg'
     |'image/png'
     |'image/svg+xml'
     |'image/tiff'
     |'image/vnd.microsoft.icon'
     |'image/webp'
     |'image/x-emf'
     |'image/x-icon'
     |'image/x-mgx-emf'
     |'image/x-xbitmap'
     |'multipart/x-zip'
     |'text/calendar'
     |'text/css'
     |'text/csv'
     |'text/ecmascript'
     |'text/html'
     |'text/javascript'
     |'text/plain'
     |'text/richtext'
     |'text/xml'
     |'video/3gpp'
     |'video/3gpp2'
     |'video/avi'
     |'video/mp4'
     |'video/mpeg'
     |'video/msvideo'
     |'video/ogg'
     |'video/quicktime'
     |'video/webm'
     |'video/x-mpeg'
     |'video/x-msvideo';
    
    /**
     * Type alias for enum id values in "tyrLogEvent" collection
     */
    export type TyrLogEventId =
      'db'
     |'historical'
     |'http'
     |'subscription';
    
    /**
     * Type alias for enum id values in "tyrLogLevel" collection
     */
    export type TyrLogLevelId =
      1
     |2
     |3
     |4
     |5
     |6
     |7;
    
    /**
     * Type alias for enum id values in "tyrMarkupType" collection
     */
    export type TyrMarkupTypeId =
      1
     |2
     |3;
    
    /**
     * Type alias for enum id values in "tyrSchemaType" collection
     */
    export type TyrSchemaTypeId =
      1
     |2;
    
    /**
     * Type alias for enum id values in "unit" collection
     */
    export type UnitId =
      1
     |2
     |3
     |4
     |5
     |6
     |7
     |8
     |9
     |10
     |11
     |12
     |13
     |14
     |15
     |16
     |17
     |18
     |19
     |21
     |22
     |23
     |24
     |25
     |26
     |27
     |28
     |29
     |30
     |31
     |32
     |33
     |34
     |35
     |36
     |37
     |38
     |39
     |40
     |41
     |42
     |43
     |45
     |46
     |47
     |48
     |49
     |50
     |51
     |52
     |53
     |54
     |55
     |56
     |57
     |58
     |59
     |60
     |61
     |62
     |63
     |64
     |65
     |66
     |67
     |68
     |69
     |70
     |71
     |72
     |73
     |74
     |75
     |76
     |77
     |78
     |79
     |80
     |81
     |82
     |83
     |84
     |85
     |86
     |87
     |88
     |89
     |90
     |91
     |92
     |93
     |94
     |95
     |96
     |97
     |98
     |99
     |100
     |101
     |102
     |103
     |104
     |105
     |106
     |107
     |108
     |109
     |110
     |111
     |112
     |113
     |114;
    
    /**
     * Type alias for enum id values in "unitFactor" collection
     */
    export type UnitFactorId =
      1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1
     |1;
    
    /**
     * Type alias for enum id values in "unitSystem" collection
     */
    export type UnitSystemId =
      1
     |2
     |3
     |4;
    
    /**
     * Type alias for enum id values in "unitType" collection
     */
    export type UnitTypeId =
      1
     |2
     |3
     |4
     |5
     |6
     |7
     |8
     |9
     |10
     |11
     |12
     |13
     |14
     |15
     |16
     |17
     |18
     |19
     |20
     |21
     |22
     |23
     |24
     |25
     |26
     |27
     |28
     |29
     |30
     |31
     |32
     |33
     |34
     |35
     |36
     |37
     |38
     |39
     |40
     |41
     |42
     |43
     |44
     |45
     |46
     |47
     |48
     |49
     |50
     |51
     |52
     |53
     |54
     |55
     |56
     |57
     |58
     |59
     |60
     |61
     |62
     |63
     |64
     |65
     |66;
    
    /**
     * Add lookup properties to Tyr.byName with extended interfaces
     */
    export interface CollectionsByName<IdType = string> {
      continent: ContinentCollection<IdType>;
      country: CountryCollection<IdType>;
      mediaType: MediaTypeCollection<IdType>;
      province: ProvinceCollection<IdType>;
      tyrComponentConfig: TyrComponentConfigCollection<IdType>;
      tyrExchangeRate: TyrExchangeRateCollection<IdType>;
      tyrImport: TyrImportCollection<IdType>;
      tyrInstance: TyrInstanceCollection<IdType>;
      tyrLog: TyrLogCollection<IdType>;
      tyrLogEvent: TyrLogEventCollection<IdType>;
      tyrLogLevel: TyrLogLevelCollection<IdType>;
      tyrMarkupType: TyrMarkupTypeCollection<IdType>;
      tyrMigrationStatus: TyrMigrationStatusCollection<IdType>;
      tyrPage: TyrPageCollection<IdType>;
      tyrSchema: TyrSchemaCollection<IdType>;
      tyrSchemaType: TyrSchemaTypeCollection<IdType>;
      tyrSubscription: TyrSubscriptionCollection<IdType>;
      tyrUserAgent: TyrUserAgentCollection<IdType>;
      unit: UnitCollection<IdType>;
      unitFactor: UnitFactorCollection<IdType>;
      unitSystem: UnitSystemCollection<IdType>;
      unitType: UnitTypeCollection<IdType>;
    }

    /**
     * Add lookup properties to Tyr.collections with extended interfaces
     */
    export interface CollectionsByClassName<IdType = string> {
      Continent: ContinentCollection<IdType>;
      Country: CountryCollection<IdType>;
      MediaType: MediaTypeCollection<IdType>;
      Province: ProvinceCollection<IdType>;
      TyrComponentConfig: TyrComponentConfigCollection<IdType>;
      TyrExchangeRate: TyrExchangeRateCollection<IdType>;
      TyrImport: TyrImportCollection<IdType>;
      TyrInstance: TyrInstanceCollection<IdType>;
      TyrLog: TyrLogCollection<IdType>;
      TyrLogEvent: TyrLogEventCollection<IdType>;
      TyrLogLevel: TyrLogLevelCollection<IdType>;
      TyrMarkupType: TyrMarkupTypeCollection<IdType>;
      TyrMigrationStatus: TyrMigrationStatusCollection<IdType>;
      TyrPage: TyrPageCollection<IdType>;
      TyrSchema: TyrSchemaCollection<IdType>;
      TyrSchemaType: TyrSchemaTypeCollection<IdType>;
      TyrSubscription: TyrSubscriptionCollection<IdType>;
      TyrUserAgent: TyrUserAgentCollection<IdType>;
      Unit: UnitCollection<IdType>;
      UnitFactor: UnitFactorCollection<IdType>;
      UnitSystem: UnitSystemCollection<IdType>;
      UnitType: UnitTypeCollection<IdType>;
    }

    /**
     * Add lookup properties to Tyr.byId with extended interfaces
     */
    export interface CollectionsById<IdType = string> {
      _g0: ContinentCollection<IdType>;
      _g1: CountryCollection<IdType>;
      _mt: MediaTypeCollection<IdType>;
      _g2: ProvinceCollection<IdType>;
      _tc: TyrComponentConfigCollection<IdType>;
      _u5: TyrExchangeRateCollection<IdType>;
      _im: TyrImportCollection<IdType>;
      _t2: TyrInstanceCollection<IdType>;
      _l0: TyrLogCollection<IdType>;
      _l2: TyrLogEventCollection<IdType>;
      _l1: TyrLogLevelCollection<IdType>;
      _p1: TyrMarkupTypeCollection<IdType>;
      _m1: TyrMigrationStatusCollection<IdType>;
      _p0: TyrPageCollection<IdType>;
      _t1: TyrSchemaCollection<IdType>;
      _t0: TyrSchemaTypeCollection<IdType>;
      _t3: TyrSubscriptionCollection<IdType>;
      _u4: TyrUserAgentCollection<IdType>;
      _u2: UnitCollection<IdType>;
      _u3: UnitFactorCollection<IdType>;
      _u0: UnitSystemCollection<IdType>;
      _u1: UnitTypeCollection<IdType>;
    }
  

    /**
     * Union type of all current collection names
     */
    export type CollectionName =
      'continent'
     |'country'
     |'mediaType'
     |'province'
     |'tyrComponentConfig'
     |'tyrExchangeRate'
     |'tyrImport'
     |'tyrInstance'
     |'tyrLog'
     |'tyrLogEvent'
     |'tyrLogLevel'
     |'tyrMarkupType'
     |'tyrMigrationStatus'
     |'tyrPage'
     |'tyrSchema'
     |'tyrSchemaType'
     |'tyrSubscription'
     |'tyrUserAgent'
     |'unit'
     |'unitFactor'
     |'unitSystem'
     |'unitType';

    /**
     * Union type of all current collection ids
     */
    export type CollectionId =
      '_g0'
     |'_g1'
     |'_g2'
     |'_im'
     |'_l0'
     |'_l1'
     |'_l2'
     |'_m1'
     |'_mt'
     |'_p0'
     |'_p1'
     |'_t0'
     |'_t1'
     |'_t2'
     |'_t3'
     |'_tc'
     |'_u0'
     |'_u1'
     |'_u2'
     |'_u3'
     |'_u4'
     |'_u5';
    
  }

}
