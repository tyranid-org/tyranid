/**
 *
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 *
 * Generated by `tyranid-tdgen@0.5.2`: https://github.com/tyranid-org/tyranid-tdgen
 * date: Fri Apr 20 2018 16:33:52 GMT-0400 (EDT)
 */
  
import { ObjectID } from 'mongodb';
import { Tyr } from 'tyranid';
import { Tyr as Isomorphic } from 'tyranid-isomorphic';

declare module 'tyranid' {

  namespace Tyr {
    export type CollectionName = Isomorphic.CollectionName;
    export type CollectionId = Isomorphic.CollectionId;
    

    /**
     * documents inserted into the db and given _id
     */
    interface Inserted extends Tyr.Document {
      _id: ObjectID
    }

    /**
     * Server document definition for BlogCollection,
     * extends isomorphic base interface BaseBlog.
     */
    interface Blog
      extends Inserted,
              Isomorphic.BaseBlog<ObjectID, Inserted> {}
    

    /**
     * Server document definition for ChartCollection,
     * extends isomorphic base interface BaseChart.
     */
    interface Chart
      extends Inserted,
              Isomorphic.BaseChart<ObjectID, Inserted> {}
    

    /**
     * Server document definition for CommentCollection,
     * extends isomorphic base interface BaseComment.
     */
    interface Comment
      extends Inserted,
              Isomorphic.BaseComment<ObjectID, Inserted> {}
    

    /**
     * Server document definition for InventoryCollection,
     * extends isomorphic base interface BaseInventory.
     */
    interface Inventory
      extends Inserted,
              Isomorphic.BaseInventory<ObjectID, Inserted> {}
    

    /**
     * Server document definition for ItemCollection,
     * extends isomorphic base interface BaseItem.
     */
    interface Item
      extends Inserted,
              Isomorphic.BaseItem<ObjectID, Inserted> {}
    

    /**
     * Server document definition for OrganizationCollection,
     * extends isomorphic base interface BaseOrganization.
     */
    interface Organization
      extends Inserted,
              Isomorphic.BaseOrganization<ObjectID, Inserted> {}
    

    /**
     * Server document definition for PostCollection,
     * extends isomorphic base interface BasePost.
     */
    interface Post
      extends Inserted,
              Isomorphic.BasePost<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TeamCollection,
     * extends isomorphic base interface BaseTeam.
     */
    interface Team
      extends Inserted,
              Isomorphic.BaseTeam<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrInstanceCollection,
     * extends isomorphic base interface BaseTyrInstance.
     */
    interface TyrInstance
      extends Inserted,
              Isomorphic.BaseTyrInstance<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrLogCollection,
     * extends isomorphic base interface BaseTyrLog.
     */
    interface TyrLog
      extends Inserted,
              Isomorphic.BaseTyrLog<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrLogEventCollection,
     * extends isomorphic base interface BaseTyrLogEvent.
     */
    interface TyrLogEvent
      extends Inserted,
              Isomorphic.BaseTyrLogEvent<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrLogLevelCollection,
     * extends isomorphic base interface BaseTyrLogLevel.
     */
    interface TyrLogLevel
      extends Inserted,
              Isomorphic.BaseTyrLogLevel<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrMigrationStatusCollection,
     * extends isomorphic base interface BaseTyrMigrationStatus.
     */
    interface TyrMigrationStatus
      extends Inserted,
              Isomorphic.BaseTyrMigrationStatus<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrSchemaCollection,
     * extends isomorphic base interface BaseTyrSchema.
     */
    interface TyrSchema
      extends Inserted,
              Isomorphic.BaseTyrSchema<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrSchemaTypeCollection,
     * extends isomorphic base interface BaseTyrSchemaType.
     */
    interface TyrSchemaType
      extends Inserted,
              Isomorphic.BaseTyrSchemaType<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrSubscriptionCollection,
     * extends isomorphic base interface BaseTyrSubscription.
     */
    interface TyrSubscription
      extends Inserted,
              Isomorphic.BaseTyrSubscription<ObjectID, Inserted> {}
    

    /**
     * Server document definition for TyrUserAgentCollection,
     * extends isomorphic base interface BaseTyrUserAgent.
     */
    interface TyrUserAgent
      extends Inserted,
              Isomorphic.BaseTyrUserAgent<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UnitCollection,
     * extends isomorphic base interface BaseUnit.
     */
    interface Unit
      extends Inserted,
              Isomorphic.BaseUnit<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UnitFactorCollection,
     * extends isomorphic base interface BaseUnitFactor.
     */
    interface UnitFactor
      extends Inserted,
              Isomorphic.BaseUnitFactor<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UnitSystemCollection,
     * extends isomorphic base interface BaseUnitSystem.
     */
    interface UnitSystem
      extends Inserted,
              Isomorphic.BaseUnitSystem<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UnitTypeCollection,
     * extends isomorphic base interface BaseUnitType.
     */
    interface UnitType
      extends Inserted,
              Isomorphic.BaseUnitType<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UsagelogCollection,
     * extends isomorphic base interface BaseUsagelog.
     */
    interface Usagelog
      extends Inserted,
              Isomorphic.BaseUsagelog<ObjectID, Inserted> {}
    

    /**
     * Server document definition for UserCollection,
     * extends isomorphic base interface BaseUser.
     */
    interface User
      extends Inserted,
              Isomorphic.BaseUser<ObjectID, Inserted> {}

    /**
     * Server collection definition.
     */
    interface BlogCollection
      extends Tyr.CollectionInstance<Blog> {}
    

    /**
     * Server collection definition.
     */
    interface ChartCollection
      extends Tyr.CollectionInstance<Chart> {}
    

    /**
     * Server collection definition.
     */
    interface CommentCollection
      extends Tyr.CollectionInstance<Comment> {}
    

    /**
     * Server collection definition.
     */
    interface InventoryCollection
      extends Tyr.CollectionInstance<Inventory> {}
    

    /**
     * Server collection definition.
     */
    interface ItemCollection
      extends Tyr.CollectionInstance<Item> {}
    

    /**
     * Server collection definition.
     */
    interface OrganizationCollection
      extends Tyr.CollectionInstance<Organization> {}
    

    /**
     * Server collection definition.
     */
    interface PostCollection
      extends Tyr.CollectionInstance<Post> {}
    

    /**
     * Server collection definition.
     */
    interface TeamCollection
      extends Tyr.CollectionInstance<Team> {}
    

    /**
     * Server collection definition.
     */
    interface TyrInstanceCollection
      extends Tyr.CollectionInstance<TyrInstance> {}
    

    /**
     * Server collection definition.
     */
    interface TyrLogCollection
      extends Tyr.CollectionInstance<TyrLog> {}
    

    /**
     * Server collection definition.
     */
    interface TyrLogEventCollection
      extends Tyr.CollectionInstance<TyrLogEvent>,
                Isomorphic.TyrLogEventCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface TyrLogLevelCollection
      extends Tyr.CollectionInstance<TyrLogLevel>,
                Isomorphic.TyrLogLevelCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface TyrMigrationStatusCollection
      extends Tyr.CollectionInstance<TyrMigrationStatus> {}
    

    /**
     * Server collection definition.
     */
    interface TyrSchemaCollection
      extends Tyr.CollectionInstance<TyrSchema> {}
    

    /**
     * Server collection definition.
     */
    interface TyrSchemaTypeCollection
      extends Tyr.CollectionInstance<TyrSchemaType>,
                Isomorphic.TyrSchemaTypeCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface TyrSubscriptionCollection
      extends Tyr.CollectionInstance<TyrSubscription> {}
    

    /**
     * Server collection definition.
     */
    interface TyrUserAgentCollection
      extends Tyr.CollectionInstance<TyrUserAgent> {}
    

    /**
     * Server collection definition.
     */
    interface UnitCollection
      extends Tyr.CollectionInstance<Unit>,
                Isomorphic.UnitCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface UnitFactorCollection
      extends Tyr.CollectionInstance<UnitFactor>,
                Isomorphic.UnitFactorCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface UnitSystemCollection
      extends Tyr.CollectionInstance<UnitSystem>,
                Isomorphic.UnitSystemCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface UnitTypeCollection
      extends Tyr.CollectionInstance<UnitType>,
                Isomorphic.UnitTypeCollectionEnumStatic {}
    

    /**
     * Server collection definition.
     */
    interface UsagelogCollection
      extends Tyr.CollectionInstance<Usagelog> {}
    

    /**
     * Server collection definition.
     */
    interface UserCollection
      extends Tyr.CollectionInstance<User> {}

    export type TyrLogEventId = Isomorphic.TyrLogEventId;
    export type TyrLogLevelId = Isomorphic.TyrLogLevelId;
    export type TyrSchemaTypeId = Isomorphic.TyrSchemaTypeId;
    export type UnitId = Isomorphic.UnitId;
    export type UnitFactorId = Isomorphic.UnitFactorId;
    export type UnitSystemId = Isomorphic.UnitSystemId;
    export type UnitTypeId = Isomorphic.UnitTypeId;
  
    /**
     * Add lookup properties to Tyr.byName with extended interfaces
     */
    interface CollectionsByName {
      blog: BlogCollection;
      chart: ChartCollection;
      comment: CommentCollection;
      inventory: InventoryCollection;
      item: ItemCollection;
      organization: OrganizationCollection;
      post: PostCollection;
      team: TeamCollection;
      tyrInstance: TyrInstanceCollection;
      tyrLog: TyrLogCollection;
      tyrLogEvent: TyrLogEventCollection;
      tyrLogLevel: TyrLogLevelCollection;
      tyrMigrationStatus: TyrMigrationStatusCollection;
      tyrSchema: TyrSchemaCollection;
      tyrSchemaType: TyrSchemaTypeCollection;
      tyrSubscription: TyrSubscriptionCollection;
      tyrUserAgent: TyrUserAgentCollection;
      unit: UnitCollection;
      unitFactor: UnitFactorCollection;
      unitSystem: UnitSystemCollection;
      unitType: UnitTypeCollection;
      usagelog: UsagelogCollection;
      user: UserCollection;
    }

    /**
     * Add lookup properties to Tyr.byId with extended interfaces
     */
    interface CollectionsById {
      b00: BlogCollection;
      c00: ChartCollection;
      c0m: CommentCollection;
      i00: InventoryCollection;
      itm: ItemCollection;
      o00: OrganizationCollection;
      p00: PostCollection;
      t00: TeamCollection;
      _t2: TyrInstanceCollection;
      _l0: TyrLogCollection;
      _l2: TyrLogEventCollection;
      _l1: TyrLogLevelCollection;
      _m1: TyrMigrationStatusCollection;
      _t1: TyrSchemaCollection;
      _t0: TyrSchemaTypeCollection;
      _t3: TyrSubscriptionCollection;
      _u4: TyrUserAgentCollection;
      _u2: UnitCollection;
      _u3: UnitFactorCollection;
      _u0: UnitSystemCollection;
      _u1: UnitTypeCollection;
      ul0: UsagelogCollection;
      u00: UserCollection;
    }
  
  }

}
